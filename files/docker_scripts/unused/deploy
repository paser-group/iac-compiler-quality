#!/bin/bash

function net_exists() {
    result=$(docker network list | awk '{ print $2 }' | grep node-net)

    if [ "${result}" == "" ]; then
        false
    else
        true
    fi
}

function deploy_net() {
        if net_exists; then
            echo 'network "node-net" already exists'
        else
            docker network create node-net \
                --internal \
                --ip-range "${subnet}.0/24" \
                --subnet "${subnet}.0/24"
        fi
}

function clean() {
    docker kill node1
    docker kill node2
    docker kill node3
    docker rm node1
    docker rm node2
    docker rm node3
    docker network rm node-net
}

function deploy() {
    if [ "$1" == "" ]; then
        echo "ERROR: argument needs to be supplied"
        return 1
    elif [ "$1" == "image" ]; then
        docker build -t ubuntu:bdi .
    elif [ "$1" == "clean" ]; then
        clean
    elif [ "$1" == "all" ]; then
        deploy_net
        docker run -it -d --name node1 -p 7000:22 --network node-net --ip ${subnet}.11 ubuntu:bdi
        docker run -it -d --name node2 --network node-net --ip ${subnet}.12 ubuntu:bdi
        docker run -it -d --name node3 --network node-net --ip ${subnet}.13 ubuntu:bdi
    elif [ "$1" == "network" ]; then
        deploy_net
    elif net_exists; then
        echo 'run "{path_to}/deploy network" before deploying any nodes'
    elif [ "$1" == "node1" ]; then
        docker run -it -d --name node1 -p 7000:22 --network node-net --ip ${subnet}.11 ubuntu:bdi
    elif [ "$1" == "node2" ]; then
        docker run -it -d --name node2 --network node-net --ip ${subnet}.12 ubuntu:bdi
    elif [ "$1" == "node3" ]; then
        docker run -it -d --name node3 --network node-net --ip ${subnet}.13 ubuntu:bdi
    fi
}


subnet=10.1.1
deploy $@
