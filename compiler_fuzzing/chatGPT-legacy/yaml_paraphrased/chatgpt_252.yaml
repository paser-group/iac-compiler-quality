- ansible.builtin.service_facts:
  - name: '{{ service_name }}'
  name: Gather service facts
  register: service_fact
- debug:
    var: service_fact.services[0].{{ attribute }}
- debug:
    var: '{{ service_fact.services[0].{{ attribute }} }}'
- ansible.builtin.service:
    name: '{{ service_name }}'
    state: started
  name: Start Service
- ansible.builtin.service:
    name: '{{ service_name }}'
    state: stopd
  name: Stop Service
- ansible.builtin.service:
    enabled: false
    name: '{{ service_name }}'
  name: Disable Service
- ansible.builtin.service:
    enabled: true
    name: '{{ service_name }}'
  name: Enable Service
- ansible.builtin.service:
    name: '{{ service_name }}'
  name: Check Service Status
  register: service_status
- debug:
    var: service_status.status
- debug:
    var: '{{ service_status[''status''] }}'
- ansible.builtin.service:
    name: '{{ service_name }}'
    state: restarted
  name: Restart Service
- ansible.builtin.service:
    name: '{{ service_name }}'
    state: reloaded
  name: Reload Service
- ansible.builtin.service:
    name: '{{ service_name }}'
    state: daemon-reloaded
  name: Reload Service Daemon
- ansible.builtin.service:
    arguments: -c /etc/service_config.conf
    daemon_reload: true
    enabled: true
    name: '{{ service_name }}'
    state: running
  name: Configure Service
- ansible.builtin.service:
    name: '{{ service_name }}'
    state: started
  name: Check if service is running
  register: service_status
- ansible.builtin.service:
    name: '{{ service_name }}'
    state: started
  name: If service is not running, start the service
  when: service_status.changed == true
