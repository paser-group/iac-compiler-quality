- vars:
    venv_cmd: "{{ ansible_python_interpreter ~ ' -m venv' }}"
    venv_dest: "{{ galaxy_dir }}/test_venv_{{ resolvelib_version }}"
  block:
    - name: install another version of resolvelib that is supported by ansible-galaxy
      pip:
        name: resolvelib
        version: "{{ resolvelib_version }}"
        state: present
        virtualenv_command: "{{ venv_cmd }}"
        virtualenv: "{{ venv_dest }}"
        virtualenv_site_packages: True

    - include_tasks: fail_fast_resolvelib.yml
      args:
        apply:
          environment:
            PATH: "{{ venv_dest }}/bin:{{ ansible_env.PATH }}"
            ANSIBLE_CONFIG: '{{ galaxy_dir }}/ansible.cfg'

    - include_tasks: install.yml
      vars:
        test_name: pulp_v3
        test_id: '{{ test_name }} (resolvelib {{ resolvelib_version }})'
        test_server: '{{ pulp_server }}published/api/'
        vX: "v3/"
        requires_auth: false
      args:
        apply:
          environment:
            PATH: "{{ venv_dest }}/bin:{{ ansible_env.PATH }}"
            ANSIBLE_CONFIG: '{{ galaxy_dir }}/ansible.cfg'

    - include_tasks: download.yml
      args:
        apply:
          environment:
            PATH: "{{ venv_dest }}/bin:{{ ansible_env.PATH }}"
            ANSIBLE_CONFIG: '{{ galaxy_dir }}/ansible.cfg'
  always:
    - name: remove test venv
      file:
        path: "{{ venv_dest }}"
        state: absent
