- name: Test ansible.builtin.assemble module
  hosts: localhost
  gather_facts: false

  tasks:
    - name: Assemble configuration files
      ansible.builtin.assemble:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        backup: "{{ item.backup }}"
        decrypt: "{{ item.decrypt }}"
        owner: "{{ item.owner }}"
        group: "{{ item.group }}"
        mode: "{{ item.mode }}"
        regexp: "{{ item.regexp }}"
        validate: "{{ item.validate }}"
        delimiter: "{{ item.delimiter }}"
        remote_src: "{{ item.remote_src }}"
        unsafe_writes: "{{ item.unsafe_writes }}"
        seuser: "{{ item.seuser }}"
        serole: "{{ item.serole }}"
        setype: "{{ item.setype }}"
        selevel: "{{ item.selevel }}"
        ignore_hidden: "{{ item.ignore_hidden }}"
      loop:
        - { src: "/path/to/file1", dest: "/etc/file1", backup: false, decrypt: true, owner: "root", group: "root", mode: "0600", regexp: "", validate: "", delimiter: ".", remote_src: false, unsafe_writes: false, seuser: "", serole: "", setype: "", selevel: "", ignore_hidden: true }
        - { src: "/path/to/file2", dest: "/etc/file2", backup: true, decrypt: false, owner: "root", group: "root", mode: "0644", regexp: "", validate: "", delimiter: "-", remote_src: true, unsafe_writes: true, seuser: "", serole: "", setype: "", selevel: "", ignore_hidden: false }
        # Add more test cases as needed

    - name: Test port settings
      ansible.builtin.debug:
        msg: "Testing port {{ item }}..."
      with_sequence: start=8000 end=8100
      # Alternatively, you can use a random range of port numbers

  # Additional tasks if needed