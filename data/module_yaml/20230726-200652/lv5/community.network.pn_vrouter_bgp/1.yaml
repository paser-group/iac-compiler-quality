- name: Test pn_vrouter_bgp module
  hosts: localhost
  gather_facts: false

  tasks:
    - name: Generate random port numbers
      set_fact:
        random_port_1: "{{ 30000 + (ansible_play_hosts_all.index(inventory_hostname) * 10) }}"
        random_port_2: "{{ 30001 + (ansible_play_hosts_all.index(inventory_hostname) * 10) }}"
        random_port_3: "{{ 30002 + (ansible_play_hosts_all.index(inventory_hostname) * 10) }}"

    - name: Add/update BGP configuration
      community.network.pn_vrouter_bgp:
        pn_vrouter_name: "{{ item.vrouter_name }}"
        pn_neighbor: "{{ item.neighbor }}"
        pn_remote_as: "{{ item.remote_as }}"
        pn_password: "{{ item.password }}"
        pn_interface: "eth{{ item.interface }}"
        pn_cliswitch: "{{ item.cliswitch }}{{ random_port_1 }}"
        pn_route_map_in: "{{ item.route_map_in }}"
        pn_route_map_out: "{{ item.route_map_out }}"
        pn_prefix_list_in: "{{ item.prefix_list_in }}"
        pn_prefix_list_out: "{{ item.prefix_list_out }}"
        pn_bfd: "{{ item.bfd }}"
        pn_bfd_multihop: "{{ item.bfd_multihop }}"
        pn_send_community: "{{ item.send_community }}"
        pn_allowas_in: "{{ item.allowas_in }}"
        pn_no_route_map_in: "{{ item.no_route_map_in }}"
        pn_no_route_map_out: "{{ item.no_route_map_out }}"
        pn_soft_reconfig_inbound: "{{ item.soft_reconfig_inbound }}"
        pn_next_hop_self: "{{ item.next_hop_self }}"
        pn_override_capability: "{{ item.override_capability }}"
        pn_default_originate: "{{ item.default_originate }}"
        pn_connect_retry_interval: "{{ item.connect_retry_interval }}"
        pn_neighbor_holdtime: "{{ item.neighbor_holdtime }}"
        pn_neighbor_keepalive_interval: "{{ item.neighbor_keepalive_interval }}"
        pn_max_prefix: "{{ item.max_prefix }}"
        pn_max_prefix_warn_only: "{{ item.max_prefix_warn_only }}"
        pn_update_source: "loopback{{ item.update_source }}"
        pn_ebgp_multihop: "{{ item.ebgp_multihop }}"
        pn_route_reflector_client: "{{ item.route_reflector_client }}"
        pn_multi_protocol: "{{ item.multi_protocol }}"
        pn_weight: "{{ item.weight }}"
        state: "{{ item.state }}"
      with_items:
        - { vrouter_name: "vrouter1", neighbor: "10.1.1.2", remote_as: "65000", password: "password123", interface: "{{ random_port_2 }}", cliswitch: "{{ random_port_3 }}", route_map_in: "route-map-in1", route_map_out: "route-map-out1", prefix_list_in: "prefix-list-in1", prefix_list_out: "prefix-list-out1", bfd: true, bfd_multihop: true, send_community: true, allowas_in: true, no_route_map_in: "no-route-map-in1", no_route_map_out: "no-route-map-out1", soft_reconfig_inbound: true, next_hop_self: true, override_capability: true, default_originate: true, connect_retry_interval: "5", neighbor_holdtime: "30", neighbor_keepalive_interval: "10", max_prefix: "1000", max_prefix_warn_only: false, update_source: "{{ random_port_1 }}", ebgp_multihop: "2", route_reflector_client: false, multi_protocol: null, weight: null, state: "present" }

    # Additional tasks can be added to validate the results or trigger specific conditions