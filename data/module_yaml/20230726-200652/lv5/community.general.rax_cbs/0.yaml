---
- name: Test playbook for community.general.rax_cbs module
  hosts: localhost
  gather_facts: false

  vars:
    api_key: "YOUR_RACKSPACE_API_KEY"
    auth_endpoint: "https://identity.api.rackspacecloud.com/v2.0"
    credentials: "/path/to/rackspace_credentials"
    description: "Test volume"
    env: "test_environment"
    identity_type: "username"
    image: "ubuntu"
    meta:
      key1: value1
      key2: value2
    name: "test-volume"
    region: "DFW"
    size: 100
    state: "present"
    tenant_id: "YOUR_TENANT_ID"
    tenant_name: "YOUR_TENANT_NAME"
    username: "YOUR_USERNAME"
    validate_certs: false
    volume_type: "SATA"
    wait: true
    wait_timeout: 300

  tasks:
    # Test Case 1: Create a CBS volume
    - name: Create CBS volume
      community.general.rax_cbs:
        api_key: "{{ api_key }}"
        auth_endpoint: "{{ auth_endpoint }}"
        credentials: "{{ credentials }}"
        description: "{{ description }}"
        env: "{{ env }}"
        identity_type: "{{ identity_type }}"
        image: "{{ image }}"
        meta: "{{ meta }}"
        name: "{{ name }}"
        region: "{{ region }}"
        size: "{{ size }}"
        state: "{{ state }}"
        tenant_id: "{{ tenant_id }}"
        tenant_name: "{{ tenant_name }}"
        username: "{{ username }}"
        validate_certs: "{{ validate_certs }}"
        volume_type: "{{ volume_type }}"
        wait: "{{ wait }}"
        wait_timeout: "{{ wait_timeout }}"
      register: volume_result

    - debug:
        var: volume_result

    # Test Case 2: Delete the created CBS volume
    - name: Delete CBS volume
      community.general.rax_cbs:
        api_key: "{{ api_key }}"
        auth_endpoint: "{{ auth_endpoint }}"
        credentials: "{{ credentials }}"
        env: "{{ env }}"
        identity_type: "{{ identity_type }}"
        name: "{{ name }}"
        region: "{{ region }}"
        state: "absent"
        tenant_id: "{{ tenant_id }}"
        tenant_name: "{{ tenant_name }}"
        username: "{{ username }}"
        validate_certs: "{{ validate_certs }}"
      register: delete_result

    - debug:
        var: delete_result