---
- name: Create Ecs/Ins instance
  hosts: localhost
  become: true
  
  vars:
    # Define your variables here
    admin_pass: "admin_password"
    availability_zone: "availability_zone_name"
    data_volumes:
      - { size: 100, volume_type: SATA }
    description: "Instance Description"
    domain: "example.com"
    eip_id: "eip_id_value"
    enable_auto_recovery: true
    enterprise_project_id: "enterprise_project_id_value"
    flavor_name: "flavor_name_value"
    id: "id_value"
    identity_endpoint: "identity_endpoint_value"
    image_id: "image_id_value"
    name: "instance_name"
    nics:
      - { subnet_id: "subnet_id_value", ip_address: "172.16.0.100" }
    password: "instance_password"
    project: "project_name"
    region: "region_name"
    root_volume:
      size: 120
      volume_type: SATA
    security_groups:
      - "group_id_1"
      - "group_id_2"
    server_metadata:
      meta1: value1
      meta2: value2
    server_tags:
      tag1: value1
      tag2: value2
    ssh_key_name: "key_name_value"
    state: "present"
    timeouts:
      create: 500
    user: "username"
    user_data: "user_data_value"
    vpc_id: "vpc_id_value"

  tasks:
    - name: Create Ecs/Ins instance
      community.general.hwc_ecs_instance:
        admin_pass: "{{ admin_pass }}"
        availability_zone: "{{ availability_zone }}"
        data_volumes: "{{ data_volumes }}"
        description: "{{ description }}"
        domain: "{{ domain }}"
        eip_id: "{{ eip_id }}"
        enable_auto_recovery: "{{ enable_auto_recovery }}"
        enterprise_project_id: "{{ enterprise_project_id }}"
        flavor_name: "{{ flavor_name }}"
        id: "{{ id }}"
        identity_endpoint: "{{ identity_endpoint }}"
        image_id: "{{ image_id }}"
        name: "{{ name }}"
        nics: "{{ nics }}"
        password: "{{ password }}"
        project: "{{ project }}"
        region: "{{ region }}"
        root_volume: "{{ root_volume }}"
        security_groups: "{{ security_groups }}"
        server_metadata: "{{ server_metadata }}"
        server_tags: "{{ server_tags }}"
        ssh_key_name: "{{ ssh_key_name }}"
        state: "{{ state }}"
        timeouts: "{{ timeouts }}"
        user: "{{ user }}"
        user_data: "{{ user_data }}"
        vpc_id: "{{ vpc_id }}"
      register: result

    - debug:
        var: result