---
- name: Download Files using get_url
  hosts: all
  gather_facts: false
  tasks:
    - name: Download file without specifying mode
      ansible.builtin.get_url:
        url: "http://example.com/file.txt"
        dest: "/tmp/file.txt"

    - name: Download file with checksum validation
      ansible.builtin.get_url:
        url: "http://example.com/file.txt"
        dest: "/tmp/file.txt"
        checksum: "sha256:1234567890abcdef"

    - name: Download and decompress file
      ansible.builtin.get_url:
        url: "http://example.com/file.tar.gz"
        dest: "/tmp/file.tar.gz"
        decompress: true

    - name: Download file and set correct owner and group
      ansible.builtin.get_url:
        url: "http://example.com/file.txt"
        dest: "/tmp/file.txt"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"

    - name: Download file using basic auth
      ansible.builtin.get_url:
        url: "http://example.com/file.txt"
        dest: "/tmp/file.txt"
        url_username: "username"
        url_password: "password"
        force_basic_auth: true

    - name: Download file and set file mode
      ansible.builtin.get_url:
        url: "http://example.com/file.txt"
        dest: "/tmp/file.txt"
        mode: "0644"

    - name: Download file and set SELinux attributes
      ansible.builtin.get_url:
        url: "http://example.com/file.txt"
        dest: "/tmp/file.txt"
        selevel: "s0"
        serole: "object_r"
        setype: "tmp_t"
        seuser: "system_u"

    - name: Download file with custom headers
      ansible.builtin.get_url:
        url: "http://example.com/file.txt"
        dest: "/tmp/file.txt"
        headers:
          Accept: "application/json"
          X-Auth-Token: "1234567890"

    - name: Download file and use proxy
      ansible.builtin.get_url:
        url: "http://example.com/file.txt"
        dest: "/tmp/file.txt"
        use_proxy: true
        http_agent: "Mozilla/5.0"

    - name: Download file and validate certificates
      ansible.builtin.get_url:
        url: "http://example.com/file.txt"
        dest: "/tmp/file.txt"
        validate_certs: true

    # Additional test cases based on provided heuristic for random IP addresses
    - name: Download file using recently introduced networking module
      ansible.builtin.get_url:
        url: "http://example.com/file.txt"
        dest: "/tmp/file.txt"
        network_ip_address: "{{ (1..254) | random_ip_address('10.1.1.0/24') }}"

      # To generate random IP address:
      # ansible_node1_ip: "{{ (1..254) | random_ip_address('10.1.1.0/24') }}"