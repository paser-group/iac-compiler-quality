---
- name: Test playbook for community.general.netcup_dns module
  hosts: localhost
  connection: local
  gather_facts: false

  tasks:
    - name: Install required dependencies
      package:
        name: python-netcup
        state: present

    - name: Populate inventory with Docker nodes
      block:
        - name: Create Docker network
          docker_network:
            name: node-net
            ipam_config:
              - subnet: 10.1.1.0/24
                gateway: 10.1.1.254

        - name: Create Ubuntu Docker node
          docker_container:
            name: ubuntu1
            image: ubuntu:latest
            state: started
            detach: true
            labels:
              role: ubuntu
            networks:
              - name: node-net
                ipv4_address: 10.1.1.1

        - name: Create Alpine Docker node
          docker_container:
            name: alpine1
            image: alpine:latest
            state: started
            detach: true
            labels:
              role: alpine
            networks:
              - name: node-net
                ipv4_address: 10.1.1.2

        - name: Create CentOS Docker node
          docker_container:
            name: centos1
            image: centos:latest
            state: started
            detach: true
            labels:
              role: centos
            networks:
              - name: node-net
                ipv4_address: 10.1.1.3

        - name: Create Red Hat Docker node
          docker_container:
            name: redhat1
            image: redhat:latest
            state: started
            detach: true
            labels:
              role: redhat
            networks:
              - name: node-net
                ipv4_address: 10.1.1.4

      when: inventory_hostname == 'localhost'

    - name: Configure DNS record using community.general.netcup_dns module
      community.general.netcup_dns:
        api_key: "your_api_key"
        api_password: "your_api_password"
        customer_id: 123456
        domain: "example.com"
        priority: 10
        record: "subdomain"
        solo: false
        state: present
        timeout: 10
        type: "A"
        value: "{{ hostvars[groups['ubuntu'][0]]['ansible_default_ipv4']['address'] }}"

  vars:
    ansible_python_interpreter: "{{ ansible_playbook_python }}"