---
- name: Create Ecs/Ins Resource
  hosts: localhost
  gather_facts: false

  vars:
    admin_pass: "myAdminPass"
    availability_zone: "myAvailabilityZone"
    data_volumes:
      - volume1
      - volume2
    description: "myDescription"
    domain: "myDomain"
    eip_id: "myEipId"
    enable_auto_recovery: true
    enterprise_project_id: "myEnterpriseProjectId"
    flavor_name: "myFlavorName"
    id: "myId"
    identity_endpoint: "myIdentityEndpoint"
    image_id: "myImageId"
    name: "myName"
    nics:
      - nic1
      - nic2
    password: "myPassword"
    project: "myProject"
    region: "myRegion"
    root_volume:
      size: "myRootVolumeSize"
      type: "myRootVolumeType"
    security_groups:
      - group1
      - group2
    server_metadata:
      key1: value1
      key2: value2
    server_tags:
      tag1: value1
      tag2: value2
    ssh_key_name: "mySshKeyName"
    state: present
    timeouts:
      connection: 300
      read: 100
      write: 200
    user: "myUser"
    user_data: "myUserData"
    vpc_id: "myVpcId"

  tasks:
    - name: Create Ecs/Ins Resource
      community.general.hwc_ecs_instance:
        admin_pass: "{{ admin_pass }}"
        availability_zone: "{{ availability_zone }}"
        data_volumes: "{{ data_volumes }}"
        description: "{{ description }}"
        domain: "{{ domain }}"
        eip_id: "{{ eip_id }}"
        enable_auto_recovery: "{{ enable_auto_recovery }}"
        enterprise_project_id: "{{ enterprise_project_id }}"
        flavor_name: "{{ flavor_name }}"
        id: "{{ id }}"
        identity_endpoint: "{{ identity_endpoint }}"
        image_id: "{{ image_id }}"
        name: "{{ name }}"
        nics: "{{ nics }}"
        password: "{{ password }}"
        project: "{{ project }}"
        region: "{{ region }}"
        root_volume: "{{ root_volume }}"
        security_groups: "{{ security_groups }}"
        server_metadata: "{{ server_metadata }}"
        server_tags: "{{ server_tags }}"
        ssh_key_name: "{{ ssh_key_name }}"
        state: "{{ state }}"
        timeouts: "{{ timeouts }}"
        user: "{{ user }}"
        user_data: "{{ user_data }}"
        vpc_id: "{{ vpc_id }}"
      register: result

    - name: Debug Result
      debug:
        var: result