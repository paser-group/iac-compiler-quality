---
- name: Test playbook for community.network.ce_bgp module
  hosts: localhost
  gather_facts: false

  tasks:
    - name: Configure BGP
      community.network.ce_bgp:
        as_number: '{{ item.as_number }}'
        as_path_limit: '{{ item.as_path_limit }}'
        bgp_rid_auto_sel: '{{ item.bgp_rid_auto_sel }}'
        check_first_as: '{{ item.check_first_as }}'
        clear_interval: '{{ item.clear_interval }}'
        confed_id_number: '{{ item.confed_id_number }}'
        confed_nonstanded: '{{ item.confed_nonstanded }}'
        confed_peer_as_num: '{{ item.confed_peer_as_num }}'
        conn_retry_time: '{{ item.conn_retry_time }}'
        default_af_type: '{{ item.default_af_type }}'
        ebgp_if_sensitive: '{{ item.ebgp_if_sensitive }}'
        gr_peer_reset: '{{ item.gr_peer_reset }}'
        graceful_restart: '{{ item.graceful_restart }}'
        hold_interval: '{{ item.hold_interval }}'
        hold_time: '{{ item.hold_time }}'
        is_shutdown: '{{ item.is_shutdown }}'
        keep_all_routes: '{{ item.keep_all_routes }}'
        keepalive_time: '{{ item.keepalive_time }}'
        memory_limit: '{{ item.memory_limit }}'
        min_hold_time: '{{ item.min_hold_time }}'
        router_id: '{{ item.router_id }}'
        state: '{{ item.state }}'
        suppress_interval: '{{ item.suppress_interval }}'
        time_wait_for_rib: '{{ item.time_wait_for_rib }}'
        vrf_name: '{{ item.vrf_name }}'
        vrf_rid_auto_sel: '{{ item.vrf_rid_auto_sel }}'
      loop:
        - as_number: "100"
          as_path_limit: "200"
          bgp_rid_auto_sel: "True"
          check_first_as: "False"
          clear_interval: "300"
          confed_id_number: "400"
          confed_nonstanded: "True"
          confed_peer_as_num: "500"
          conn_retry_time: "600"
          default_af_type: "ipv4 unicast"
          ebgp_if_sensitive: "False"
          gr_peer_reset: "True"
          graceful_restart: "True"
          hold_interval: "700"
          hold_time: "800"
          is_shutdown: "False"
          keep_all_routes: "True"
          keepalive_time: "900"
          memory_limit: "1000"
          min_hold_time: "1100"
          router_id: "192.168.0.1"
          state: "present"
          suppress_interval: "1200"
          time_wait_for_rib: "1300"
          vrf_name: "VRF-1"
          vrf_rid_auto_sel: "True"
        
        # Test case with different encodings
        - as_number: "\u0031\u0030\u0030"
          as_path_limit: "\u0032\u0030\u0030"
          bgp_rid_auto_sel: "\u0054\u0072\u0075\u0065"
          check_first_as: "\u0046\u0061\u006C\u0073\u0065"
          clear_interval: "\u0033\u0030\u0030"
          confed_id_number: "\u0043\u006F\u006E\u0066"
          confed_nonstanded: "\u0054\u0072\u0075\u0065"
          confed_peer_as_num: "\u0035\u0030\u0030"
          conn_retry_time: "\u0036\u0030\u0030"
          default_af_type: "\u0069\u0070\u0076\u0034 \u0075\u006E\u0069\u0063\u0061\u0073\u0074"
          ebgp_if_sensitive: "\u0046\u0061\u006C\u0073\u0065"
          gr_peer_reset: "\u0054\u0072\u0075\u0065"
          graceful_restart: "\u0054\u0072\u0075\u0065"
          hold_interval: "\u0037\u0030\u0030"
          hold_time: "\u0038\u0030\u0030"
          is_shutdown: "\u0046\u0061\u006C\u0073\u0065"
          keep_all_routes: "\u0054\u0072\u0075\u0065"
          keepalive_time: "\u0039\u0030\u0030"
          memory_limit: "\u0031\u0030\u0030\u0030"
          min_hold_time: "\u0031\u0031\u0030\u0030"
          router_id: "\u0031\u0039\u0032\u002E\u0031\u0036\u0038\u002E\u0030\u002E\u0031"
          state: "\u0070\u0072\u0065\u0073\u0065\u006E\u0074"
          suppress_interval: "\u0031\u0032\u0030\u0030"
          time_wait_for_rib: "\u0031\u0033\u0030\u0030"
          vrf_name: "\u0056\u0052\u0046\u002D\u0031"
          vrf_rid_auto_sel: "\u0054\u0072\u0075\u0065"