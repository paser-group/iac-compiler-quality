---
- name: Test playbook
  hosts: localhost
  gather_facts: false
  tasks:
    - name: Include required roles
      include_role:
        name: community.general.gitlab_group

    - name: Generate strings with varied encodings
      set_fact:
        gitlab_group: "{{ item }}"
      loop:
        - "{{ 'gitlab_group_name' }}"
        - "{{ 'ģīţļāb_ģřøūŕ_ņāmē' | urlencode }}"
        - "{{ 'gitlab_group_name' | b64encode }}"
        - "{{ 'gitlab_group_name' | b64encode | urlencode }}"

    - name: Test gitlab_group_members module
      community.general.gitlab_group_members:
        gitlab_group: "{{ gitlab_group }}"
        gitlab_user: "{{ item['gitlab_user'] }}"
        gitlab_users_access: "{{ item['gitlab_users_access'] }}"
        access_level: "{{ item['access_level'] }}"
        purge_users: "{{ item['purge_users'] }}"
        state: "{{ item['state'] }}"
        validate_certs: "{{ item['validate_certs'] }}"
        api_job_token: "{{ item['api_job_token'] }}"
        api_oauth_token: "{{ item['api_oauth_token'] }}"
        api_password: "{{ item['api_password'] }}"
        api_token: "{{ item['api_token'] }}"
        api_url: "{{ item['api_url'] }}"
        api_username: "{{ item['api_username'] }}"
      with_items:
        - gitlab_user: 'user1'
          gitlab_users_access: 'developer'
          access_level: 'developer'
          purge_users: []
          state: 'present'
          validate_certs: true
          api_job_token: ''
          api_oauth_token: ''
          api_password: ''
          api_token: ''
          api_url: ''
          api_username: ''
        - gitlab_user: 'user2'
          gitlab_users_access: 'maintainer'
          access_level: 'maintainer'
          purge_users: []
          state: 'present'
          validate_certs: true
          api_job_token: ''
          api_oauth_token: ''
          api_password: ''
          api_token: ''
          api_url: ''
          api_username: ''