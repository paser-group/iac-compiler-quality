- name: Test playbook for community.general.keycloak_authz_authorization_scope module
  hosts: localhost
  gather_facts: false
  vars:
    auth_client_id: "my_client_id"
    auth_client_secret: "my_client_secret"
    auth_keycloak_url: "https://keycloak.example.com"
    auth_password: "my_password"
    auth_realm: "my_realm"
    auth_username: "my_username"
    client_id: "my_client_id"
    connection_timeout: 10
    display_name: "Test Authorization Scope"
    http_agent: "Ansible"
    icon_uri: "https://example.com/icon.png"
    name: "test_scope"
    realm: "my_realm"
    state: present
    token: "my_token"
    validate_certs: true

  tasks:
    - name: Create Keycloak authorization scope with different string encodings
      community.general.keycloak_authz_authorization_scope:
        auth_client_id: "{{ auth_client_id }}"
        auth_client_secret: "{{ auth_client_secret }}"
        auth_keycloak_url: "{{ auth_keycloak_url }}"
        auth_password: "{{ auth_password }}"
        auth_realm: "{{ auth_realm }}"
        auth_username: "{{ auth_username }}"
        client_id: "{{ client_id }}"
        connection_timeout: "{{ connection_timeout }}"
        display_name: "{{ display_name }}"
        http_agent: "{{ http_agent }}"
        icon_uri: "{{ icon_uri }}"
        name: "{{ scope_name }}"
        realm: "{{ realm }}"
        state: "{{ state }}"
        token: "{{ token }}"
        validate_certs: "{{ validate_certs }}"
      loop:
        - "Test Authorization Scope"  # Normal string
        - "\u0054\u0065\u0073\u0074\u0020\u0041\u0075\u0074\u0068\u006f\u0072\u0069\u007a\u0061\u0074\u0069\u006f\u006e\u0020\u0053\u0063\u006f\u0070\u0065"  # Unicode escaped string
        - "\x54\x65\x73\x74\x20\x41\x75\x74\x68\x6f\x0072\x69\x7a\x61\x74\x69\x6f\x6e\x20\x53\x63\x6f\x0070\x65"  # Hex escaped string
        - !unsafe "\u{54}\u{65}\u{73}\u{74}\u{20}\u{41}\u{75}\u{74}\u{68}\u{6f}\u{72}\u{69}\u{7a}\u{61}\u{74}\u{69}\u{6f}\u{6e}\u{20}\u{53}\u{63}\u{6f}\u{70}\u{65}"  # Unsafe Unicode escaped string
        - !unsafe "\u{54}\u{65}\u{73}\69}\u{74}\6f}\u{20}\u{41}\75}\u{74}\{68}\u{6f}\u{72}\u{69}\u{7a}\u{61}\{74}\{69}\u{6f}\u{6e}\{20}\{53}\{63}\{6f}\u{70}\{65}".encode("utf-8")  # Unsafe Unicode escaped string with UTF-8 encoding