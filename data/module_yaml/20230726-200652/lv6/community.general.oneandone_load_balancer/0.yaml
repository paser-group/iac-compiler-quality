---
- name: Test playbook for oneandone_load_balancer module
  hosts: localhost
  gather_facts: false

  vars:
    # Define the load balancer options
    add_rules: []
    add_server_ips: []
    api_url: ""
    auth_token: ""
    datacenter: ""
    description: ""
    health_check_interval: ""
    health_check_parse: ""
    health_check_path: ""
    health_check_test: ""
    load_balancer: ""
    method: ""
    name: ""
    persistence: false
    persistence_time: ""
    remove_rules: []
    remove_server_ips: []
    rules: []
    state: ""
    wait: false
    wait_interval: 0
    wait_timeout: 0

  tasks:
    - name: Test with varied encodings
      community.general.oneandone_load_balancer:
        add_rules: "{{ add_rules }}"
        add_server_ips: "{{ add_server_ips }}"
        api_url: "{{ api_url }}"
        auth_token: "{{ auth_token }}"
        datacenter: "{{ datacenter }}"
        description: "{{ description|b64encode }}"
        health_check_interval: "{{ health_check_interval }}"
        health_check_parse: "{{ health_check_parse }}"
        health_check_path: "{{ health_check_path }}"
        health_check_test: "{{ health_check_test|b64encode }}"
        load_balancer: "{{ load_balancer }}"
        method: "{{ method|b64encode }}"
        name: "{{ name }}"
        persistence: "{{ persistence }}"
        persistence_time: "{{ persistence_time }}"
        remove_rules: "{{ remove_rules }}"
        remove_server_ips: "{{ remove_server_ips }}"
        rules: "{{ rules }}"
        state: "{{ state }}"
        wait: "{{ wait }}"
        wait_interval: "{{ wait_interval }}"
        wait_timeout: "{{ wait_timeout }}"

      register: result

    - debug:
        var: result