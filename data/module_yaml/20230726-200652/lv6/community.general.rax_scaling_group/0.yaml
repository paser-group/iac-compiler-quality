- name: Test playbook for rax_scaling_group module
  hosts: localhost
  gather_facts: false

  tasks:
    - name: Test case with valid options
      community.general.rax_scaling_group:
        api_key: "your_api_key"
        auth_endpoint: "https://auth.api.example.com/v2.0/"
        config_drive: true
        cooldown: 300
        credentials: /path/to/credentials
        disk_config: "AUTO"
        env: "production"
        files:
          - src: /path/to/file1
            dest: /dest/file1
          - src: /path/to/file2
            dest: /dest/file2
        flavor: "performance2-120"
        identity_type: "rackspace"
        image: "Ubuntu 20.04"
        key_name: "my_key"
        loadbalancers:
          - lb1
          - lb2
        max_entities: 5
        meta:
          meta_key1: meta_value1
          meta_key2: meta_value2
        min_entities: 2
        name: "my_scaling_group"
        networks:
          - network1
          - network2
        region: "DFW"
        server_name: "myserver"
        state: present
        tenant_id: "my_tenant_id"
        tenant_name: "my_tenant_name"
        user_data: "user_data_script.sh"
        username: "my_username"
        validate_certs: true
        wait: true
        wait_timeout: 600

    - name: Test case with invalid options (incorrect type)
      community.general.rax_scaling_group:
        api_key: 12345678  # Should be a string
        auth_endpoint: "https://auth.api.example.com/v2.0/"
        config_drive: true
        cooldown: 300
        credentials: /path/to/credentials  # Should be a string
        disk_config: "AUTO"
        env: 123  # Should be a string
        files:  # Should be a dictionary
          - src: /path/to/file1
            dest: /dest/file1
        flavor: ["performance2-120"]  # Should be a string
        identity_type: "rackspace"
        image: "Ubuntu 20.04"
        key_name: "my_key"
        loadbalancers:
          - lb1
        max_entities: "2"  # Should be an integer
        meta:  # Should be a dictionary
          meta_key1: meta_value1
          meta_key2: meta_value2
        min_entities: 2
        name: "my_scaling_group"
        networks:
          - network1
          - network2
        region: "DFW"
        server_name: "myserver"
        state: present
        tenant_id: "my_tenant_id"
        tenant_name: "my_tenant_name"
        user_data: "user_data_script.sh"
        username: "my_username"
        validate_certs: true
        wait: true
        wait_timeout: 600

    - name: Test case with varied encoded strings
      community.general.rax_scaling_group:
        api_key: "你好"  # Chinese characters encoded as UTF-8
        auth_endpoint: "https://auth.api.example.com/v2.0/"
        config_drive: "\u2713"  # Unicode checkmark symbol encoded as UTF-8 escape sequence
        cooldown: 300
        credentials: /path/to/credentials
        disk_config: "AUTO"
        env: "production"
        files:
          - src: /path/to/file1
            dest: /dest/file1
          - src: /path/to/file2
            dest: /dest/file2
        flavor: "performance2-120"
        identity_type: "rackspace"
        image: "Ubuntu 20.04"
        key_name: "my_key"
        loadbalancers:
          - lb1
          - lb2
        max_entities: 5
        meta:
          meta_key1: "\u00E4\u00BD\u00A0"  # Unicode encoded as UTF-8 escape sequence
          meta_key2: meta_value2
        min_entities: 2
        name: "my_scaling_group"
        networks:
          - network1
          - network2
        region: "DFW"
        server_name: "myserver"
        state: present
        tenant_id: "my_tenant_id"
        tenant_name: "my_tenant_name"
        user_data: "user_data_script.sh"
        username: "my_username"
        validate_certs: true
        wait: true
        wait_timeout: 600