---
- name: Test playbook for ipa_hbacrule module
  hosts: localhost
  gather_facts: false

  vars:
    cn: 1234  # Trigger type-related bug by providing an integer value instead of a string
    description: "Test HBAC rule"
    host: "{{ lookup('community.general.random_mac') }}"  # Generate random MAC addresses instead of hostnames
    hostcategory: "example-category"
    hostgroup:
      - "hostgroup1"
      - "hostgroup2"
    ipa_host: "ipa.example.com"
    ipa_user: "admin"
    ipa_pass: "admin_password"
    ipa_port: "{{ lookup('community.general.random_string', 10, '0123456789') }}"  # Generate a random port using the community.general.random_string
    ipa_timeout: "abc"  # Trigger type-related bug by providing a string instead of an integer
    ipa_prot: "https"
    service: "service1"  # Trigger type-related bug by providing a string instead of a list
    servicecategory: "example-service-category"
    servicegroup: "servicegroup1"  # Trigger type-related bug by providing a string instead of a list
    sourcehost:
      - "sourcehost1"
      - "sourcehost2"
    sourcehostcategory: "example-sourcehost-category"
    sourcehostgroup: "sourcehostgroup1"  # Trigger type-related bug by providing a string instead of a list
    state: "present"
    user:
      - "user1"
      - "user2"
    usercategory: "example-user-category"
    usergroup:
      - "usergroup1"
      - "usergroup2"
    validate_certs: "true"  # Trigger type-related bug by providing a string instead of a boolean

  tasks:
    - name: Create ipa_hbacrule
      community.general.ipa_hbacrule:
        cn: "{{ cn }}"
        description: "{{ description }}"
        host: "{{ host }}"
        hostcategory: "{{ hostcategory }}"
        hostgroup: "{{ hostgroup }}"
        ipa_host: "{{ ipa_host }}"
        ipa_user: "{{ ipa_user }}"
        ipa_pass: "{{ ipa_pass }}"
        ipa_port: "{{ ipa_port }}"
        ipa_timeout: "{{ ipa_timeout }}"
        ipa_prot: "{{ ipa_prot }}"
        service: "{{ service }}"
        servicecategory: "{{ servicecategory }}"
        servicegroup: "{{ servicegroup }}"
        sourcehost: "{{ sourcehost }}"
        sourcehostcategory: "{{ sourcehostcategory }}"
        sourcehostgroup: "{{ sourcehostgroup }}"
        state: "{{ state }}"
        user: "{{ user }}"
        usercategory: "{{ usercategory }}"
        usergroup: "{{ usergroup }}"
        validate_certs: "{{ validate_certs }}"
      register: result

    - name: Debug output
      debug:
        var: result