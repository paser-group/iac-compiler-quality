- hosts: localhost
  gather_facts: false

  vars:
    api_key: "YOUR_API_KEY"
    auth_endpoint: "https://auth.api.example.com"
    config_drive: false
    cooldown: 300
    credentials: "/path/to/credentials_file"
    disk_config: "AUTO"
    env: "production"
    files:
      - path: "/path/to/file1.txt"
        content: "File 1 content"
      - path: "/path/to/file2.txt"
        content: "File 2 content"
    flavor: "m1.small"
    identity_type: "username"
    image: "ubuntu1804"
    key_name: "mykey"
    loadbalancers:
      - lb1
      - lb2
    max_entities: 10
    meta:
      size: small
    min_entities: 2
    name: "my_scaling_group"
    networks:
      - public
      - private
    region: "us-west-1"
    server_name: "server1"
    state: "present"
    tenant_id: "YOUR_TENANT_ID"
    tenant_name: "YOUR_TENANT_NAME"
    user_data: |
      #!/bin/bash
      echo "User Data Script"
    username: "myuser"
    validate_certs: false
    wait: true
    wait_timeout: 600

  tasks:
    - name: Create Rackspace scaling group
      community.general.rax_scaling_group:
        api_key: "{{ api_key }}"
        auth_endpoint: "{{ auth_endpoint }}"
        config_drive: "{{ config_drive }}"
        cooldown: "{{ cooldown }}"
        credentials: "{{ credentials | default(!null) }}"
        disk_config: "{{ disk_config }}"
        env: "{{ env }}"
        files: "{{ files | default(!null) }}"
        flavor: "{{ flavor }}"
        identity_type: "{{ identity_type }}"
        image: "{{ image }}"
        key_name: "{{ key_name }}"
        loadbalancers: "{{ loadbalancers }}"
        max_entities: "{{ max_entities }}"
        meta: "{{ meta | default(!null) }}"
        min_entities: "{{ min_entities }}"
        name: "{{ name }}"
        networks: "{{ networks }}"
        region: "{{ region }}"
        server_name: "{{ server_name }}"
        state: "{{ state }}"
        tenant_id: "{{ tenant_id }}"
        tenant_name: "{{ tenant_name }}"
        user_data: "{{ user_data }}"
        username: "{{ username }}"
        validate_certs: "{{ validate_certs }}"
        wait: "{{ wait }}"
        wait_timeout: "{{ wait_timeout }}"
      register: scaling_group

    - debug:
        var: scaling_group