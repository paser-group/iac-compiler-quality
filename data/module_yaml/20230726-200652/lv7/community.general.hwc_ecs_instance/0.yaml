---
- name: Test Ansible Bug with hwc_ecs_instance module
  hosts: localhost
  gather_facts: false

  vars:
    admin_pass: "MyAdminPassword"
    availability_zone: "MyAvailabilityZone"
    data_volumes:
      - volume_name: "DataVolume1"
        size: 100
      - volume_name: "DataVolume2"
        size: 200
    description: "MyECSInstance"
    domain: "MyDomain"
    eip_id: "MyEipId"
    enable_auto_recovery: true
    enterprise_project_id: "MyEnterpriseProjectId"
    flavor_name: "MyFlavorName"
    id: "MyInstanceId"
    identity_endpoint: "MyIdentityEndpoint"
    image_id: "MyImageId"
    name: "MyInstanceName"
    nics:
      - subnet_id: "MySubnetId"
        vpc_id: "MyVpcId"
    password: "MyPassword"
    project: "MyProject"
    region: "MyRegion"
    root_volume:
      size: 300
      volume_name: "RootVolume"
    security_groups:
      - sg_id: "SecurityGroup1"
      - sg_id: "SecurityGroup2"
    server_metadata:
      meta_key1: "meta_value1"
      meta_key2: "meta_value2"
    server_tags:
      tag_key1: "tag_value1"
      tag_key2: "tag_value2"
    ssh_key_name: "MySshKey"
    state: present
    timeouts:
      read: 300
      create: 600
    user: "MyUser"
    user_data: "MyUserData"
    vpc_id: "MyVpcId"

  tasks:
    - name: Create ECS Instance with division-based operations
      community.general.hwc_ecs_instance:
        admin_pass: "{{ admin_pass }}"
        availability_zone: "{{ availability_zone }}"
        data_volumes: "{{ data_volumes }}"
        description: "{{ description }}"
        domain: "{{ domain }}"
        eip_id: "{{ eip_id }}"
        enable_auto_recovery: "{{ enable_auto_recovery }}"
        enterprise_project_id: "{{ enterprise_project_id }}"
        flavor_name: "{{ flavor_name }}"
        id: "{{ id }}"
        identity_endpoint: "{{ identity_endpoint }}"
        image_id: "{{ image_id }}"
        name: "{{ name }}"
        nics: "{{ nics }}"
        password: "{{ password }}"
        project: "{{ project }}"
        region: "{{ region }}"
        root_volume: "{{ root_volume }}"
        security_groups: "{{ security_groups }}"
        server_metadata: "{{ server_metadata }}"
        server_tags: "{{ server_tags }}"
        ssh_key_name: "{{ ssh_key_name }}"
        state: "{{ state }}"
        timeouts: "{{ timeouts }}"
        user: "{{ user }}"
        user_data: "{{ user_data }}"
        vpc_id: "{{ vpc_id }}"
      register: result

    - name: Debug result
      debug:
        var: result