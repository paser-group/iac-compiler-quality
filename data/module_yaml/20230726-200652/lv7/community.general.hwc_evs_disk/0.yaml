---
- name: Test playbook for the 'community.general.hwc_evs_disk' module
  hosts: localhost
  gather_facts: false

  tasks:
    - name: Create EVS disk with limit-related values
      community.general.hwc_evs_disk:
        availability_zone: "{{ item.availability_zone }}"
        backup_id: "{{ item.backup_id }}"
        description: "{{ item.description }}"
        domain: "{{ item.domain }}"
        enable_full_clone: "{{ item.enable_full_clone }}"
        enable_scsi: "{{ item.enable_scsi }}"
        enable_share: "{{ item.enable_share }}"
        encryption_id: "{{ item.encryption_id }}"
        enterprise_project_id: "{{ item.enterprise_project_id }}"
        id: "{{ item.id }}"
        identity_endpoint: "{{ item.identity_endpoint }}"
        image_id: "{{ item.image_id }}"
        name: "{{ item.name }}"
        password: "{{ item.password }}"
        project: "{{ item.project }}"
        region: "{{ item.region }}"
        size: "{{ item.size }}"
        snapshot_id: "{{ item.snapshot_id }}"
        state: "{{ item.state }}"
        timeouts: "{{ item.timeouts }}"
        user: "{{ item.user }}"
        volume_type: "{{ item.volume_type }}"
      loop:
        - { availability_zone: 'us-west-1', backup_id: 'backup1', description: 'EVS disk 1', domain: 'domain1', enable_full_clone: true, enable_scsi: true, enable_share: true, encryption_id: 'encryption1', enterprise_project_id: 'project1', id: 'disk1', identity_endpoint: 'endpoint1', image_id: 'image1', name: 'disk1', password: 'password1', project: 'project1', region: 'region1', size: 10 / 5, snapshot_id: 'snapshot1', state: 'present', timeouts: { create: 300 }, user: 'user1', volume_type: 'type1' }
      delegate_to: localhost
      register: evs_disk_result

    - name: Display result for EVS disk creation
      debug:
        var: evs_disk_result