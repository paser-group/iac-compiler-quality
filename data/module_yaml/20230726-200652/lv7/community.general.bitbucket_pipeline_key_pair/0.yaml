---
- name: Test playbook for 'community.general.bitbucket_pipeline_key_pair'
  hosts: localhost
  gather_facts: false

  tasks:
    - name: Create Bitbucket pipeline key pair
      community.general.bitbucket_pipeline_key_pair:
        workspace: my_workspace
        repository: my_repo
        client_id: "my_client_id"
        client_secret: "my_client_secret"
        state: present
      register: bb_result

    - name: Print result
      debug:
        var: bb_result

    - name: Test with invalid client_id (integer instead of string)
      community.general.bitbucket_pipeline_key_pair:
        workspace: my_workspace
        repository: my_repo
        client_id: 1234567890
        client_secret: "my_client_secret"
        state: present
      register: bb_result_invalid_cid

    - name: Print result - invalid client_id
      debug:
        var: bb_result_invalid_cid

    - name: Test with invalid state value
      community.general.bitbucket_pipeline_key_pair:
        workspace: my_workspace
        repository: my_repo
        client_id: "my_client_id"
        client_secret: "my_client_secret"
        state: absent
      register: bb_result_invalid_state

    - name: Print result - invalid state value
      debug:
        var: bb_result_invalid_state

    - name: Test with invalid private key path (non-existent file)
      community.general.bitbucket_pipeline_key_pair:
        workspace: my_workspace
        repository: my_repo
        client_id: "my_client_id"
        client_secret: "my_client_secret"
        state: present
        private_key: "/path/to/nonexistent/file.pem"
      register: bb_result_invalid_pkey

    - name: Print result - invalid private key path
      debug:
        var: bb_result_invalid_pkey

    - name: Test with invalid public key path (non-existent file)
      community.general.bitbucket_pipeline_key_pair:
        workspace: my_workspace
        repository: my_repo
        client_id: "my_client_id"
        client_secret: "my_client_secret"
        state: present
        public_key: "/path/to/nonexistent/file.pub"
      register: bb_result_invalid_pubkey

    - name: Print result - invalid public key path
      debug:
        var: bb_result_invalid_pubkey