---
- name: Configure ISIS View
  hosts: all
  gather_facts: false

  vars:
    aclnum_or_name: "ACL1"  # Example ACL name
    allow_filter: true
    allow_up_down: true
    autocostenable: true
    autocostenablecompatible: true
    avoid_learning: true
    bfd_min_rx: 1000
    bfd_min_tx: 500
    bfd_multiplier_num: 3
    cost: 10  # Assigning direct division-based value
    cost_type: "internal"
    coststyle: "auto"
    defaultmode: "level1"
    description: "ISIS View Configuration"
    enablelevel1tolevel2: true
    export_aclnumorname: "EXPORT-ACL1"
    export_ipprefix: "10.0.0.0/24"
    export_policytype: "STATIC"
    export_processid: 1
    export_protocol: "OSPF"
    export_routepolicyname: "EXPORT-POLICY"
    import_aclnumorname: "IMPORT-ACL1"
    import_cost: 20  # Assigning direct division-based value
    import_ipprefix: "192.168.0.0/24"
    import_route_policy: "IMPORT-POLICY"
    import_routepolicy_name: "IMPORT-POLICY"
    import_routepolicyname: "IMPORT-POLICY"
    import_tag: 100  # Assigning direct division-based value
    import_leveltype: "level2"
    inheritcost: true
    instance_id: 1
    ip_address: "10.1.1.1"
    ip_prefix_name: "PREFIX1"
    islevel: "level2"
    level_type: "level2"
    max_load: 80
    mode_routepolicyname: "MODE-POLICY"
    mode_tag: 200  # Assigning direct division-based value
    netentity: "NETENTITY"
    penetration_direct: "PENETRATION"
    permitibgp: true
    preference_value: 150
    processid: 1
    protocol: "OSPF"
    relaxspfLimit: true
    route_policy_name: "ROUTE-POLICY"
    state: "present"
    stdbandwidth: 10000
    stdlevel1cost: 50
    stdlevel2cost: 60
    tag: 300  # Assigning direct division-based value
    weight: 2000

  tasks:
    - name: Configure ISIS View
      community.network.ce_is_is_view:
        provider:
          host: "{{ inventory_hostname }}"
          username: admin
          password: secret
          transport: cli
        aclnum_or_name: "{{ aclnum_or_name }}"
        allow_filter: "{{ allow_filter }}"
        allow_up_down: "{{ allow_up_down }}"
        autocostenable: "{{ autocostenable }}"
        autocostenablecompatible: "{{ autocostenablecompatible }}"
        avoid_learning: "{{ avoid_learning }}"
        bfd_min_rx: "{{ bfd_min_rx }}"
        bfd_min_tx: "{{ bfd_min_tx }}"
        bfd_multiplier_num: "{{ bfd_multiplier_num }}"
        cost: "{{ stdlevel1cost // 5 }}"  # Division-based operation
        cost_type: "{{ cost_type }}"
        coststyle: "{{ coststyle }}"
        defaultmode: "{{ defaultmode }}"
        description: "{{ description }}"
        enablelevel1tolevel2: "{{ enablelevel1tolevel2 }}"
        export_aclnumorname: "{{ export_aclnumorname }}"
        export_ipprefix: "{{ export_ipprefix }}"
        export_policytype: "{{ export_policytype }}"
        export_processid: "{{ export_processid }}"
        export_protocol: "{{ export_protocol }}"
        export_routepolicyname: "{{ export_routepolicyname }}"
        import_aclnumorname: "{{ import_aclnumorname }}"
        import_cost: "{{ stdlevel2cost // 3 }}"  # Division-based operation
        import_ipprefix: "{{ import_ipprefix }}"
        import_route_policy: "{{ import_route_policy }}"
        import_routepolicy_name: "{{ import_routepolicy_name }}"
        import_routepolicyname: "{{ import_routepolicyname }}"
        import_tag: "{{ tag // 3 }}"  # Division-based operation
        import_leveltype: "{{ import_leveltype }}"
        inheritcost: "{{ inheritcost }}"
        instance_id: "{{ instance_id }}"
        ip_address: "{{ ip_address }}"
        ip_prefix_name: "{{ ip_prefix_name }}"
        islevel: "{{ islevel }}"
        level_type: "{{ level_type }}"
        max_load: "{{ max_load }}"
        mode_routepolicyname: "{{ mode_routepolicyname }}"
        mode_tag: "{{ tag // 6 }}"  # Division-based operation
        netentity: "{{ netentity }}"
        penetration_direct: "{{ penetration_direct }}"
        permitibgp: "{{ permitibgp }}"
        preference_value: "{{ preference_value }}"
        processid: "{{ processid }}"
        protocol: "{{ protocol }}"
        relaxspfLimit: "{{ relaxspfLimit }}"
        route_policy_name: "{{ route_policy_name }}"
        state: "{{ state }}"
        stdbandwidth: "{{ stdbandwidth }}"
        stdlevel1cost: "{{ stdlevel1cost }}"
        stdlevel2cost: "{{ stdlevel2cost }}"
        tag: "{{ tag // 2 }}"  # Division-based operation
        weight: "{{ weight }}"
      register: result

    - name: Debug ISIS View Configuration
      debug:
        var: result