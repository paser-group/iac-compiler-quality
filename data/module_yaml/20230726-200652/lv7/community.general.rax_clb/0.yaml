- name: Create / Delete a load balancer in R
  hosts: localhost
  gather_facts: false
  
  vars:
    # Load balancer details
    algorithm: roundrobin
    name: my_load_balancer
    port: 80
    protocol: HTTP
    region: ORD
    state: present
    type: public
    username: ansible_user
    api_key: ansible_user_api_key
    validate_certs: False
    wait: True
    wait_timeout: 300
    
    # Network details
    subnet: 10.1.1.0/24
    gateway: 10.1.1.254
    nodes:
      - name: ubuntu1
        ip: 10.1.1.1
        distro: ubuntu
      - name: alpine1
        ip: 10.1.1.2
        distro: alpine
      - name: centos1
        ip: 10.1.1.3
        distro: centos
      - name: redhat1
        ip: 10.1.1.4
        distro: redhat

  tasks:
    - name: Create load balancer
      community.general.rax_clb:
        username: "{{ username }}"
        api_key: "{{ api_key }}"
        name: "{{ name }}"
        protocol: "{{ protocol }}"
        port: "{{ port }}"
        region: "{{ region }}"
        type: "{{ type }}"
        state: "{{ state }}"
        wait: "{{ wait }}"
        wait_timeout: "{{ wait_timeout }}"
      register: lb_result
      when: state == "present"

    - name: Assign VIP to nodes
      set_fact:
        vip_id: "{{ lb_result.data.vip_id }}"
      when: lb_result.changed

    - name: Update hostvars with VIP information
      set_fact:
        node_vip: "{{ subnet.split('/')[0].split('.')[:-1] + ['1'] | join('.') }}"
      when: vip_id is defined

    - name: Configure node networking
      ansible.builtin.debug:
        msg: "Configure networking for {{ item.name }} - IP: {{ item.ip }}, VIP: {{ node_vip }}"
      with_items: "{{ nodes }}"