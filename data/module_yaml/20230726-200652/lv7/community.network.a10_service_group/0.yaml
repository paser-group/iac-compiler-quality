---
- name: Test playbook for 'community.network.a10_service_group' module
  hosts: localhost
  gather_facts: false

  tasks:
    - name: Create service group with limit-related values
      community.network.a10_service_group:
        host: "{{ inventory_hostname }}"
        username: admin
        password: admin
        service_group: "{{ item.service_group }}"
        servers: "{{ item.servers }}"
        service_group_method: "{{ item.service_group_method }}"
        state: present
      loop:
        - { service_group: "sg1", servers: "10.1.1.1,10.1.1.2,10.1.1.3", service_group_method: "ROUND_ROBIN" }
        - { service_group: "sg2", servers: "10.1.1.4,10.1.1.5,10.1.1.6,10.1.1.7", service_group_method: "LEAST_CONNECTION" }
        - { service_group: "sg3", servers: "10.1.1.8,10.1.1.9,10.1.1.10,10.1.1.11,10.1.1.12", service_group_method: "RATIO_MEMBER" }

    - name: Create service group with invalid limit-related values
      community.network.a10_service_group:
        host: "{{ inventory_hostname }}"
        username: admin
        password: admin
        service_group: "{{ item.service_group }}"
        servers: "{{ item.servers }}"
        service_group_method: "{{ item.service_group_method }}"
        state: present
      loop:
        - { service_group: "sg4", servers: "10.1.1.13,10.1.1.14,10.1.1.15", service_group_method: "ROUND_ROBIN" }
        - { service_group: "sg5", servers: "10.1.1.16,10.1.1.17", service_group_method: "LEAST_CONNECTION" }
        - { service_group: "sg6", servers: "10.1.1.18", service_group_method: "RATIO_MEMBER" }

    - name: Delete service group
      community.network.a10_service_group:
        host: "{{ inventory_hostname }}"
        username: admin
        password: admin
        service_group: "{{ item.service_group }}"
        state: absent
      loop:
        - { service_group: "sg1" }
        - { service_group: "sg2" }
        - { service_group: "sg3" }
        - { service_group: "sg4" }
        - { service_group: "sg5" }
        - { service_group: "sg6" }