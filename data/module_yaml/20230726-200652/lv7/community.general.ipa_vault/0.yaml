- name: Test playbook for 'community.general.ipa_vault' module
  hosts: localhost
  gather_facts: false

  vars:
    ipa_host: "your_ipa_host"
    ipa_user: "your_ipa_user"
    ipa_pass: "your_ipa_password"
    ipa_port: 443
    ipa_prot: "https"
    ipa_timeout: 10
    ipavaulttype: "vault-file"
    ipavaultsalt: "dummy_salt"
    ipavaultpublickey: "/path/to/publickey.pub"

  tasks:
    - name: Test valid input values
      community.general.ipa_vault:
        cn: "testcn"
        description: "Test description"
        ipa_host: "{{ ipa_host }}"
        ipa_pass: "{{ ipa_pass }}"
        ipa_port: "{{ ipa_port }}"
        ipa_prot: "{{ ipa_prot }}"
        ipa_timeout: "{{ ipa_timeout }}"
        ipa_user: "{{ ipa_user }}"
        ipavaultpublickey: "{{ ipavaultpublickey }}"
        ipavaultsalt: "{{ ipavaultsalt }}"
        ipavaulttype: "{{ ipavaulttype }}"
        replace: true
        state: present
        username:
          - user1
          - user2
        validate_certs: true
        service: "test_service"
      register: result

    - name: Print module output
      debug:
        var: result

    - name: Test invalid input values
      community.general.ipa_vault:
        cn: 1234   # Should be a string, triggering a type-related bug
        description: 5678   # Should be a string, triggering a type-related bug
        ipa_host: "{{ ipa_host }}"
        ipa_pass: "{{ ipa_pass }}"
        ipa_port: "{{ ipa_port }}"
        ipa_prot: "{{ ipa_prot }}"
        ipa_timeout: "{{ ipa_timeout }}"
        ipa_user: "{{ ipa_user }}"
        ipavaultpublickey: "{{ ipavaultpublickey }}"
        ipavaultsalt: "{{ ipavaultsalt }}"
        ipavaulttype: "{{ ipavaulttype }}"
        replace: false
        state: "absent"  # Should be a string, triggering a type-related bug
        username:
          - user3
          - user4
        validate_certs: false
        service: 1234  # Should be a string, triggering a type-related bug
      ignore_errors: true
      register: result_invalid

    - name: Print invalid input module output
      debug:
        var: result_invalid