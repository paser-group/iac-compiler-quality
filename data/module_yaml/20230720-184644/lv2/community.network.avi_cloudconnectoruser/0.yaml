---
- name: Test playbook
  hosts: localhost
  gather_facts: false

  vars:
    test_data:
      - api_context: { "cloudRef": "aws" }
        api_version: "20.1.1"
        avi_api_patch_op: null
        avi_api_update_method: null
        avi_credentials: { "username": "admin", "password": b"mypassword" }
        avi_disable_session_cache_as_fact: false
        azure_serviceprincipal: null
        azure_userpass: null
        controller: "https://controller.example.com"
        gcp_credentials: null
        name: null
        oci_credentials: null
        password: "secret"
        private_key: null
        public_key: null
        state: null
        tenant: "admin"
        tenant_ref: null
        tenant_uuid: "6d1f8c43-1a32-45b3-a653-c47709efdb01"
        tencent_credentials: null
        url: null
        username: "admin"
        uuid: null

  tasks:
    - name: Run module with different test data
      community.network.avi_cloudconnectoruser:
        api_context: "{{ item.api_context }}"
        api_version: "{{ item.api_version }}"
        avi_api_patch_op: "{{ item.avi_api_patch_op }}"
        avi_api_update_method: "{{ item.avi_api_update_method }}"
        avi_credentials: "{{ item.avi_credentials }}"
        avi_disable_session_cache_as_fact: "{{ item.avi_disable_session_cache_as_fact }}"
        azure_serviceprincipal: "{{ item.azure_serviceprincipal }}"
        azure_userpass: "{{ item.azure_userpass }}"
        controller: "{{ item.controller }}"
        gcp_credentials: "{{ item.gcp_credentials }}"
        name: "{{ item.name }}"
        oci_credentials: "{{ item.oci_credentials }}"
        password: "{{ item.password }}"
        private_key: "{{ item.private_key }}"
        public_key: "{{ item.public_key }}"
        state: "{{ item.state }}"
        tenant: "{{ item.tenant }}"
        tenant_ref: "{{ item.tenant_ref }}"
        tenant_uuid: "{{ item.tenant_uuid }}"
        tencent_credentials: "{{ item.tencent_credentials }}"
        url: "{{ item.url }}"
        username: "{{ item.username }}"
        uuid: "{{ item.uuid }}"
      loop: "{{ test_data }}"