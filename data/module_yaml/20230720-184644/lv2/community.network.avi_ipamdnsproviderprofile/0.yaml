- name: Test playbook for community.network.avi_ipamdnsproviderprofile module
  hosts: localhost
  connection: local
  gather_facts: False

  vars:
    provider_profile:
      name: "test_profile"
      type: "TestType"
      username: "admin"
      password: "admin"
      allocate_ip_in_vrf: "{{ true }}"
      controller: "controller_name"
      tenant: "tenant_name"
      tenant_ref: "tenant_ref_uuid"

  tasks:
    - name: Set proxy_configuration
      set_fact:
        proxy_configuration: "proxy_config"

    - name: Set avi_api_update_method
      set_fact:
        avi_api_update_method: "POST"

    - name: Set avi_api_patch_op
      set_fact:
        avi_api_patch_op: "add"

    - name: Set avi_disable_session_cache_as_fact
      set_fact:
        avi_disable_session_cache_as_fact: "{{ true }}"

    - name: Introduce byte string values in place of regular strings
      set_fact:
        provider_profile:
          name: "test_profile"
          type: b"TestType"
          username: b"admin"
          password: b"admin"
          allocate_ip_in_vrf: "{{ true }}"
          controller: b"controller_name"
          tenant: b"tenant_name"
          tenant_ref: "tenant_ref_uuid"

    - name: Debug provider_profile
      debug:
        var: provider_profile

    - name: Create IPAM/DNS Provider Profile
      community.network.avi_ipamdnsproviderprofile:
        controller: "{{ provider_profile.controller }}"
        username: "{{ provider_profile.username }}"
        password: "{{ provider_profile.password }}"
        avi_credentials: "{{ provider_profile }}"
        type: "{{ provider_profile.type }}"
        name: "{{ provider_profile.name }}"
        tenant: "{{ provider_profile.tenant }}"
        tenant_ref: "{{ provider_profile.tenant_ref }}"
        allocate_ip_in_vrf: "{{ provider_profile.allocate_ip_in_vrf }}"
      register: result

    - name: Display result
      debug:
        var: result