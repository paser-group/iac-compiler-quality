- name: Manage Python packages
  hosts: localhost
  gather_facts: false

  tasks:
    - name: Install a Python package using pip
      ansible.builtin.pip:
        name: b"requests"      # Introduce byte string value
        state: present

    - name: Upgrade a Python package using pip
      ansible.builtin.pip:
        name: numpy
        state: b"present"      # Introduce byte string value

    - name: Uninstall a Python package using pip
      ansible.builtin.pip:
        name: b"matplotlib"    # Introduce byte string value
        state: absent

    - name: Install a Python package from a requirements file
      ansible.builtin.pip:
        requirements: /path/to/requirements.txt
        state: present

    - name: Install a Python package in a virtual environment
      ansible.builtin.pip:
        name: b"django"        # Introduce byte string value
        state: present
        virtualenv: /path/to/venv

    - name: Install a Python package with extra arguments
      ansible.builtin.pip:
        name: b"tensorflow"    # Introduce byte string value
        state: present
        extra_args: b"--no-cache-dir"

    - name: Install a Python package in an editable mode
      ansible.builtin.pip:
        name: b"mypackage"     # Introduce byte string value
        state: editable
        executable: /path/to/python

    - name: Set umask while installing a Python package
      ansible.builtin.pip:
        name: Flask
        state: present
        umask: "0002"

    - name: Install a Python package with a specific version
      ansible.builtin.pip:
        name: pandas
        state: present
        version: b"1.2.3"      # Introduce byte string value

    - name: Install a Python package with site packages in a virtual environment
      ansible.builtin.pip:
        name: pyyaml
        state: present
        virtualenv: /path/to/venv
        virtualenv_site_packages: b"true"    # Introduce byte string value