- name: Test playbook to reveal type-related bugs in ansible.ce_is_is_view module
  hosts: localhost
  gather_facts: false

  tasks:
    - name: "Configure isis view"
      community.network.ce_is_is_view:
        aclnum_or_name: "{{ some_string | uint }}"
        allow_filter: "{{ some_boolean }}"
        allow_up_down: "{{ some_boolean }}"
        autocostenable: "{{ some_boolean }}"
        autocostenablecompatible: "{{ some_boolean }}"
        avoid_learning: "{{ some_boolean }}"
        bfd_min_rx: "{{ some_integer }}"
        bfd_min_tx: "{{ some_integer }}"
        bfd_multiplier_num: "{{ some_integer }}"
        cost: "{{ some_integer }}"
        cost_type: "{{ some_string }}"
        coststyle: "{{ some_string }}"
        defaultmode: "{{ some_string }}"
        description: "{{ some_string }}"
        enablelevel1tolevel2: "{{ some_boolean }}"
        export_aclnumorname: "{{ some_string | uint }}"
        export_ipprefix: "{{ some_string }}"
        export_policytype: "{{ some_string }}"
        export_processid: "{{ some_integer }}"
        export_protocol: "{{ some_string }}"
        export_routepolicyname: "{{ some_string }}"
        import_aclnumorname: "{{ some_string | uint }}"
        import_cost: "{{ some_integer }}"
        import_ipprefix: "{{ some_string }}"
        import_route_policy: "{{ some_string }}"
        import_routepolicy_name: "{{ some_string }}"
        import_routepolicyname: "{{ some_string }}"
        import_tag: "{{ some_integer }}"
        impotr_leveltype: "{{ some_string }}"
        inheritcost: "{{ some_boolean }}"
        instance_id: "{{ some_integer }}"
        ip_address: "{{ some_string }}"
        ip_prefix_name: "{{ some_string }}"
        islevel: "{{ some_string }}"
        level_type: "{{ some_string }}"
        max_load: "{{ some_integer }}"
        mode_routepolicyname: "{{ some_string }}"
        mode_tag: "{{ some_integer }}"
        netentity: "{{ some_string }}"
        penetration_direct: "{{ some_string }}"
        permitibgp: "{{ some_boolean }}"
        preference_value: "{{ some_integer }}"
        processid: "{{ some_integer }}"
        protocol: "{{ some_string }}"
        relaxspfLimit: "{{ some_boolean }}"
        route_policy_name: "{{ some_string }}"
        state: "{{ some_string }}"
        stdbandwidth: "{{ some_integer }}"
        stdlevel1cost: "{{ some_integer }}"
        stdlevel2cost: "{{ some_integer }}"
        tag: "{{ some_integer }}"
        weight: "{{ some_integer }}"
      vars:
        some_string: "Some value as string"
        some_integer: 123
        some_boolean: true

      register: config_output

    - name: "Print configuration output"
      debug:
        var: config_output