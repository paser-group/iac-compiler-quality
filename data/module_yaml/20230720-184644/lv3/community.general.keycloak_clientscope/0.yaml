- name: Test community.general.keycloak_clientscope module
  hosts: localhost
  gather_facts: false

  vars:
    auth_client_id: "admin-cli"
    auth_client_secret: "admin-cli-secret"
    auth_keycloak_url: "https://keycloak.example.com/auth"
    auth_password: "admin-password"
    auth_realm: "master"
    auth_username: "admin-user"
    connection_timeout: 30
    description: "Test client scope"
    http_agent: "Mozilla/5.0"
    id: "test-client-scope"
    name: "Test Client Scope"
    protocol: "openid-connect"
    protocol_mappers:
      - name: "user-role-mapper"
        protocol: "openid-connect"
        protocolMapper: "oidc-usermodel-realm-role-mapper"
        config:
          claim.name: "roles"
          jsonType.label: "String"
          user.attribute: "roles"
          id.token.claim: "true"
          access.token.claim: "true"
    realm: "test-realm"
    state: "present"
    token: "{{ auth_username }}:{{ auth_password }}"
    validate_certs: false

  tasks:
    - name: Test with bytes and strings in configuration
      community.general.keycloak_clientscope:
        auth_client_id: "{{ auth_client_id }}"
        auth_client_secret: "{{ auth_client_secret }}"
        auth_keycloak_url: "{{ auth_keycloak_url }}"
        auth_password: "{{ auth_password }}"
        auth_realm: "{{ auth_realm }}"
        auth_username: "{{ auth_username }}"
        connection_timeout: "{{ connection_timeout }}"
        description: "{{ description | to_bytes }}"
        http_agent: "{{ http_agent | to_bytes }}"
        id: "{{ id | to_bytes }}"
        name: "{{ name | to_bytes }}"
        protocol: "{{ protocol | to_bytes }}"
        protocol_mappers: "{{ protocol_mappers | to_bytes }}"
        realm: "{{ realm | to_bytes }}"
        state: "{{ state | to_bytes }}"
        token: "{{ token | to_bytes }}"
        validate_certs: "{{ validate_certs }}"
      register: result
      
    - name: Debug result
      debug:
        var: result