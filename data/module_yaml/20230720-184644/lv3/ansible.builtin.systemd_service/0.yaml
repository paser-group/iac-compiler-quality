---
- hosts: localhost
  gather_facts: false

  tasks:
    - name: Check if systemd service is enabled
      ansible.builtin.systemd_service:
        name: myservice
        enabled: "{{ enable_value }}"
      register: result_enabled
      changed_when: false

    - name: Print enabled status
      debug:
        var: result_enabled

    - name: Check if systemd service is masked
      ansible.builtin.systemd_service:
        name: myservice
        masked: "{{ mask_value }}"
      register: result_masked
      changed_when: false

    - name: Print masked status
      debug:
        var: result_masked

    - name: Check if systemd service is reloaded
      ansible.builtin.systemd_service:
        name: myservice
        daemon_reload: "{{ reload_value }}"
      register: result_reload
      changed_when: false

    - name: Print reload status
      debug:
        var: result_reload

    - name: Check if systemd service is force enabled
      ansible.builtin.systemd_service:
        name: myservice
        enabled: "{{ force_enable_value }}"
        force: "{{ force_value }}"
      register: result_force_enabled
      changed_when: false

    - name: Print force enabled status
      debug:
        var: result_force_enabled

    - name: Check if systemd service is restarted with no blocking
      ansible.builtin.systemd_service:
        name: myservice
        state: "{{ restart_state }}"
        no_block: "{{ no_block_value }}"
      register: result_no_block
      changed_when: false

    - name: Print no blocking restart status
      debug:
        var: result_no_block

    - name: Check if systemd service is stopped
      ansible.builtin.systemd_service:
        name: myservice
        state: "{{ stop_state }}"
      register: result_stopped
      changed_when: false

    - name: Print stopped status
      debug:
        var: result_stopped