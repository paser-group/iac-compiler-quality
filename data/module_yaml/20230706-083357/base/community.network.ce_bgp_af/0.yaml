---
- name: Ansible Compiler Debugger & Heuristic Test Playbook
  hosts: localhost
  gather_facts: false
  vars:
    af_test_scenario:
      active_route_advertise: true
      add_path_sel_num: 2
      af_type: VPNv4
      allow_invalid_as: false
      always_compare_med: true
      as_path_neglect: false
      auto_frr_enable: true
      default_local_pref: 100
      default_med: 200
      default_rt_import_enable: true
      determin_med: 300
      ebgp_ecmp_nexthop_changed: false
      ebgp_if_sensitive: true
      ecmp_nexthop_changed: true
      ibgp_ecmp_nexthop_changed: true
      igp_metric_ignore: true
      import_process_id: 65535
      import_protocol: ospf
      ingress_lsp_policy_name: policy1
      load_balancing_as_path_ignore: true
      lowest_priority: 50
      mask_len: 24
      max_load_ebgp_num: 100
      max_load_ibgp_num: 200
      maximum_load_balance: 5
      med_none_as_maximum: true
      network_address: 192.168.0.0/16
      next_hop_sel_depend_type: 2
      nexthop_third_party: 10.0.0.1
      nhp_relay_route_policy_name: policy2
      originator_prior: 10
      policy_ext_comm_enable: true
      policy_vpn_target:
        - "2:2"
        - "3:3"
      preference_external: 100
      preference_internal: 200
      preference_local: 300
      prefrence_policy_name: policy3
      reflect_between_client: true
      reflect_chg_path: true
      reflector_cluster_id: 1.1.1.1
      reflector_cluster_ipv4: 2.2.2.2
      relay_delay_enable: true
      rib_only_enable: false
      rib_only_policy_name: policy4
      route_sel_delay: 10
      router_id: 192.168.1.1
      router_id_neglect: false
      rr_filter_number: 5
      state: present
      summary_automatic: true
      supernet_label_adv: true
      supernet_uni_adv: true
      vrf_name: vrf1
      vrf_rid_auto_sel: true

  tasks:
    - name: Test community.network.ce_bgp_af module
      community.network.ce_bgp_af:
        active_route_advertise: "{{ af_test_scenario.active_route_advertise }}"
        add_path_sel_num: "{{ af_test_scenario.add_path_sel_num }}"
        af_type: "{{ af_test_scenario.af_type }}"
        allow_invalid_as: "{{ af_test_scenario.allow_invalid_as }}"
        always_compare_med: "{{ af_test_scenario.always_compare_med }}"
        as_path_neglect: "{{ af_test_scenario.as_path_neglect }}"
        auto_frr_enable: "{{ af_test_scenario.auto_frr_enable }}"
        default_local_pref: "{{ af_test_scenario.default_local_pref }}"
        default_med: "{{ af_test_scenario.default_med }}"
        default_rt_import_enable: "{{ af_test_scenario.default_rt_import_enable }}"
        determin_med: "{{ af_test_scenario.determin_med }}"
        ebgp_ecmp_nexthop_changed: "{{ af_test_scenario.ebgp_ecmp_nexthop_changed }}"
        ebgp_if_sensitive: "{{ af_test_scenario.ebgp_if_sensitive }}"
        ecmp_nexthop_changed: "{{ af_test_scenario.ecmp_nexthop_changed }}"
        ibgp_ecmp_nexthop_changed: "{{ af_test_scenario.ibgp_ecmp_nexthop_changed }}"
        igp_metric_ignore: "{{ af_test_scenario.igp_metric_ignore }}"
        import_process_id: "{{ af_test_scenario.import_process_id }}"
        import_protocol: "{{ af_test_scenario.import_protocol }}"
        ingress_lsp_policy_name: "{{ af_test_scenario.ingress_lsp_policy_name }}"
        load_balancing_as_path_ignore: "{{ af_test_scenario.load_balancing_as_path_ignore }}"
        lowest_priority: "{{ af_test_scenario.lowest_priority }}"
        mask_len: "{{ af_test_scenario.mask_len }}"
        max_load_ebgp_num: "{{ af_test_scenario.max_load_ebgp_num }}"
        max_load_ibgp_num: "{{ af_test_scenario.max_load_ibgp_num }}"
        maximum_load_balance: "{{ af_test_scenario.maximum_load_balance }}"
        med_none_as_maximum: "{{ af_test_scenario.med_none_as_maximum }}"
        network_address: "{{ af_test_scenario.network_address }}"
        next_hop_sel_depend_type: "{{ af_test_scenario.next_hop_sel_depend_type }}"
        nexthop_third_party: "{{ af_test_scenario.nexthop_third_party }}"
        nhp_relay_route_policy_name: "{{ af_test_scenario.nhp_relay_route_policy_name }}"
        originator_prior: "{{ af_test_scenario.originator_prior }}"
        policy_ext_comm_enable: "{{ af_test_scenario.policy_ext_comm_enable }}"
        policy_vpn_target: "{{ af_test_scenario.policy_vpn_target }}"
        preference_external: "{{ af_test_scenario.preference_external }}"
        preference_internal: "{{ af_test_scenario.preference_internal }}"
        preference_local: "{{ af_test_scenario.preference_local }}"
        prefrence_policy_name: "{{ af_test_scenario.prefrence_policy_name }}"
        reflect_between_client: "{{ af_test_scenario.reflect_between_client }}"
        reflect_chg_path: "{{ af_test_scenario.reflect_chg_path }}"
        reflector_cluster_id: "{{ af_test_scenario.reflector_cluster_id }}"
        reflector_cluster_ipv4: "{{ af_test_scenario.reflector_cluster_ipv4 }}"
        relay_delay_enable: "{{ af_test_scenario.relay_delay_enable }}"
        rib_only_enable: "{{ af_test_scenario.rib_only_enable }}"
        rib_only_policy_name: "{{ af_test_scenario.rib_only_policy_name }}"
        route_sel_delay: "{{ af_test_scenario.route_sel_delay }}"
        router_id: "{{ af_test_scenario.router_id }}"
        router_id_neglect: "{{ af_test_scenario.router_id_neglect }}"
        rr_filter_number: "{{ af_test_scenario.rr_filter_number }}"
        state: "{{ af_test_scenario.state }}"
        summary_automatic: "{{ af_test_scenario.summary_automatic }}"
        supernet_label_adv: "{{ af_test_scenario.supernet_label_adv }}"
        supernet_uni_adv: "{{ af_test_scenario.supernet_uni_adv }}"
        vrf_name: "{{ af_test_scenario.vrf_name }}"
        vrf_rid_auto_sel: "{{ af_test_scenario.vrf_rid_auto_sel }}"