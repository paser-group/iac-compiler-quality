---
- name: Heuristic Test Playbook for community.general.hwc_ecs_instance module
  hosts: localhost
  gather_facts: false
  
  vars:
    admin_pass: "Passw0rd"
    availability_zone: "zone1"
    data_volumes:
      - name: volume1
        size: 10
    description: "Test instance"
    domain: "example.com"
    eip_id: ""
    enable_auto_recovery: true
    enterprise_project_id: "project123"
    flavor_name: "m1.small"
    id: "instance123"
    identity_endpoint: "https://identity.example.com"
    image_id: "image123"
    name: "test-instance"
    nics:
      - subnet_id: "subnet123"
        vpc_id: "vpc123"
    password: "{{ admin_pass | b64encode }}"
    project: "project1"
    region: "region1"
    root_volume:
      size: 20
    security_groups:
      - sg1
      - sg2
    server_metadata:
      key1: value1
      key2: value2
    server_tags:
      tag1: value1
      tag2: value2
    ssh_key_name: "key1"
    state: present
    timeouts:
      create: 300
    user: "root"
    user_data: |
      #!/bin/bash
      echo "User data script"
    vpc_id: "vpc123"
  
  tasks:
    - name: Create an instance using community.general.hwc_ecs_instance module
      community.general.hwc_ecs_instance:
        admin_pass: "{{ admin_pass }}"
        availability_zone: "{{ availability_zone }}"
        data_volumes: "{{ data_volumes }}"
        description: "{{ description }}"
        domain: "{{ domain }}"
        eip_id: "{{ eip_id }}"
        enable_auto_recovery: "{{ enable_auto_recovery }}"
        enterprise_project_id: "{{ enterprise_project_id }}"
        flavor_name: "{{ flavor_name }}"
        id: "{{ id }}"
        identity_endpoint: "{{ identity_endpoint }}"
        image_id: "{{ image_id }}"
        name: "{{ name }}"
        nics: "{{ nics }}"
        password: "{{ password }}"
        project: "{{ project }}"
        region: "{{ region }}"
        root_volume: "{{ root_volume }}"
        security_groups: "{{ security_groups }}"
        server_metadata: "{{ server_metadata }}"
        server_tags: "{{ server_tags }}"
        ssh_key_name: "{{ ssh_key_name }}"
        state: "{{ state }}"
        timeouts: "{{ timeouts }}"
        user: "{{ user }}"
        user_data: "{{ user_data }}"
        vpc_id: "{{ vpc_id }}"
      register: output
    
    - name: Print the module output
      debug:
        var: output