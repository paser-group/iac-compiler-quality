---
- name: Ansible Compiler Debugger & Heuristic Test Playbook
  hosts: localhost
  gather_facts: false

  vars:
    pn_cliswitch: "switch1"
    pn_nic: "ethernet1/1"
    pn_ospf6_area: "0.0.0.0"
    pn_vrouter_name: "vrouter1"
    state: "present"
  
  tasks:
    - name: Test - Mixed Case Sensitivity Bug
      community.network.pn_vrouter_ospf6:
        pn_cliswitch: "{{ pn_cliswitch }}"
        pn_nic: "{{ pn_nic }}"
        pn_ospf6_area: "{{ pn_ospf6_area }}"
        pn_vrouter_name: "{{ pn_vrouter_name }}"
        state: "{{ state | upper }}"
        
    - name: Test - Byte String Values
      community.network.pn_vrouter_ospf6:
        pn_cliswitch: "{{ pn_cliswitch }}"
        pn_nic: "{{ pn_nic }}"
        pn_ospf6_area: "{{ pn_ospf6_area }}"
        pn_vrouter_name: "{{ pn_vrouter_name }}"
        state: "{{ state }}"
        pn_cliswitch: "{{ pn_cliswitch | b64encode }}"
        pn_ospf6_area: "{{ pn_ospf6_area | b64encode }}"
        pn_vrouter_name: "{{ pn_vrouter_name | b64encode }}"
        
    - name: Test - Byte and String Combination
      community.network.pn_vrouter_ospf6:
        pn_cliswitch: "{{ pn_cliswitch }}"
        pn_nic: "{{ pn_nic }}"
        pn_ospf6_area: "{{ pn_ospf6_area }}"
        pn_vrouter_name: "{{ pn_vrouter_name }}"
        state: "{{ state }}"
        pn_cliswitch: "{{ pn_cliswitch | b64encode }}"
        pn_ospf6_area: "{{ pn_ospf6_area }}"
        pn_vrouter_name: "{{ pn_vrouter_name | b64encode }}"
        
    - name: Test - Random MAC Addresses
      community.network.pn_vrouter_ospf6:
        pn_cliswitch: "{{ pn_cliswitch }}"
        pn_nic: "{{ pn_nic }}"
        pn_ospf6_area: "{{ pn_ospf6_area }}"
        pn_vrouter_name: "{{ pn_vrouter_name }}"
        state: "{{ state }}"
        pn_cliswitch: "{{ pn_cliswitch }}"
        pn_nic: "{{ pn_nic }}"
        pn_vrouter_name: "{{ pn_vrouter_name }}"
        pn_mac_address: "{{ lookup('pipe','python -c \"import random, sys; sys.stdout.write(':'.join(['{:02x}'.format(random.randint(0,255)) for i in range(6)]))\"') }}"
        
    - name: Test - Random Port Numbers
      community.network.pn_vrouter_ospf6:
        pn_cliswitch: "{{ pn_cliswitch }}"
        pn_nic: "{{ pn_nic }}"
        pn_ospf6_area: "{{ pn_ospf6_area }}"
        pn_vrouter_name: "{{ pn_vrouter_name }}"
        state: "{{ state }}"
        pn_cliswitch: "{{ pn_cliswitch }}"
        pn_nic: "{{ pn_nic }}"
        pn_vrouter_name: "{{ pn_vrouter_name }}"
        pn_port: "{{ lookup('pipe','python -c \"import random, sys; sys.stdout.write(str(random.randint(1025,65535)))\"') }}"
        
    - name: Test - Strings with Varied Encodings
      community.network.pn_vrouter_ospf6:
        pn_cliswitch: "{{ pn_cliswitch }}"
        pn_nic: "{{ pn_nic }}"
        pn_ospf6_area: "{{ pn_ospf6_area }}"
        pn_vrouter_name: "{{ pn_vrouter_name }}"
        state: "{{ state }}"
        pn_cliswitch: "{{ pn_cliswitch | b64encode }}"
        pn_nic: "{{ pn_nic | b64encode }}"
        pn_ospf6_area: "{{ pn_ospf6_area | b64encode }}"
        pn_vrouter_name: "{{ pn_vrouter_name | b64encode }}"
        
    - name: Test - Division-based Operations
      community.network.pn_vrouter_ospf6:
        pn_cliswitch: "{{ pn_cliswitch }}"
        pn_nic: "{{ pn_nic }}"
        pn_ospf6_area: "{{ pn_ospf6_area }}"
        pn_vrouter_name: "{{ pn_vrouter_name }}"
        state: "{{ state }}"
        pn_limit: "{{ 10000 / 100 }}"
        
    - name: Test - !null Configuration Value
      community.network.pn_vrouter_ospf6:
        pn_cliswitch: "{{ pn_cliswitch }}"
        pn_nic: "{{ pn_nic }}"
        pn_ospf6_area: "{{ pn_ospf6_area }}"
        pn_vrouter_name: "{{ pn_vrouter_name }}"
        state: "{{ state }}"
        pn_limit: "!null"
        
    - name: Test - Random IP Addresses
      community.network.pn_vrouter_ospf6:
        pn_cliswitch: "{{ pn_cliswitch }}"
        pn_nic: "{{ pn_nic }}"
        pn_ospf6_area: "{{ pn_ospf6_area }}"
        pn_vrouter_name: "{{ pn_vrouter_name }}"
        state: "{{ state }}"
        pn_ip_address: "{{ lookup('pipe','python -c \"import random, sys; sys.stdout.write('.'.join([str(random.randint(1,255)) for i in range(4)]))\"') }}"