- name: Heuristic Test Playbook
  hosts: localhost
  gather_facts: false
  
  vars:
    auth_client_id: MyClientID
    auth_client_secret: MyClientSecret
    auth_keycloak_url: https://keycloak.example.com/auth
    auth_password: admin123
    auth_realm: my-realm
    auth_username: admin
    client_id: my-client
    connection_timeout: 10
    display_name: Test Authorization Scope
    http_agent: Test Agent
    icon_uri: http://example.com/icon.png
    name: test-scope
    realm: my-realm
    state: present
    token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
    validate_certs: false
  
  tasks:
    - name: Install keycloak_authz plugin if not present
      pip:
        name: ansible-keycloak-authz
        state: present

    - name: Create Keycloak Authorization Scope
      community.general.keycloak_authz_authorization_scope:
        auth_client_id: "{{ auth_client_id }}"
        auth_client_secret: "{{ auth_client_secret }}"
        auth_keycloak_url: "{{ auth_keycloak_url }}"
        auth_password: "{{ auth_password }}"
        auth_realm: "{{ auth_realm }}"
        auth_username: "{{ auth_username }}"
        client_id: "{{ client_id }}"
        connection_timeout: "{{ connection_timeout }}"
        display_name: "{{ display_name }}"
        http_agent: "{{ http_agent }}"
        icon_uri: "{{ icon_uri }}"
        name: "{{ name }}"
        realm: "{{ realm }}"
        state:
          - "{{ state }}"
          - "absent"  # Introduce an additional state option
        token: "{{ token }}"
        validate_certs: "{{ validate_certs }}"