- name: Ansible Heuristic Test Playbook
  hosts: localhost
  gather_facts: false

  vars:
    component: "my_component"
    deployment_message: "Deploying from Ansible playbook"
    description: "Testing Ansible playbook with heuristic-based scenarios"
    env: "production"
    hosts: "all"
    owner: "ansible"
    source_system: "Ansible"
    state: "present"
    token: "my_bigpanda_token"
    url: "https://example.com/bigpanda/api"
    validate_certs: false
    version: "v1.0"

  tasks:
    - name: Include community.general.bigpanda module
      include_role:
        name: community.general.bigpanda

    - name: Test case sensitivity in configuration values
      community.general.bigpanda:
        component: '{{ component }}'
        deployment_message: '{{ deployment_message }}'
        description: '{{ description | upper }}'
        env: '{{ env | capitalize }}'
        hosts: '{{ hosts }}'
        owner: '{{ owner | capitalize }}'
        source_system: '{{ source_system | capitalize }}'
        state: '{{ state | capitalize }}'
        token: '{{ token }}'
        url: '{{ url }}'
        validate_certs: '{{ validate_certs }}'
        version: '{{ version }}'
      register: result

    - name: Test byte string values in configuration
      community.general.bigpanda:
        component: '{{ component | b }}'
        deployment_message: '{{ deployment_message | b }}'
        description: '{{ description | b }}'
        env: '{{ env | b }}'
        hosts: '{{ hosts | b }}'
        owner: '{{ owner | b }}'
        source_system: '{{ source_system | b }}'
        state: '{{ state | b }}'
        token: '{{ token | b }}'
        url: '{{ url | b }}'
        validate_certs: '{{ validate_certs }}'
        version: '{{ version | b }}'
      register: result

    - name: Test configuration values with mix of bytes and strings
      community.general.bigpanda:
        component: '{{ component | b[2:] }}'
        deployment_message: '{{ deployment_message }}'
        description: '{{ description | b }}'
        env: '{{ env }}'
        hosts: '{{ hosts }}'
        owner: '{{ owner | b[2:] }}'
        source_system: '{{ source_system | b }}'
        state: '{{ state | b[2:] }}'
        token: '{{ token }}'
        url: '{{ url }}'
        validate_certs: '{{ validate_certs }}'
        version: '{{ version | b[2:] }}'
      register: result

    - name: Test random MAC addresses
      community.general.bigpanda:
        component: '{{ component }}'
        deployment_message: '{{ deployment_message }}'
        description: '{{ description }}'
        env: '{{ env }}'
        hosts: '{{ hosts }}'
        owner: '{{ owner }}'
        source_system: '{{ source_system }}'
        state: '{{ state }}'
        token: '{{ token }}'
        url: '{{ url }}'
        validate_certs: '{{ validate_certs }}'
        version: '{{ version }}'
        mac_address: "00:11:22:33:{{ (ansible_inventory_hostname | regex_replace('^node', '') | int) }}"
      register: result

    - name: Test random port numbers
      community.general.bigpanda:
        component: '{{ component }}'
        deployment_message: '{{ deployment_message }}'
        description: '{{ description }}'
        env: '{{ env }}'
        hosts: '{{ hosts }}'
        owner: '{{ owner }}'
        source_system: '{{ source_system }}'
        state: '{{ state }}'
        token: '{{ token }}'
        url: '{{ url }}'
        validate_certs: '{{ validate_certs }}'
        version: '{{ version }}'
        port: "{{ 33000 + (ansible_inventory_hostname | regex_replace('^node', '') | int) }}"
      register: result

    - name: Test different string encodings
      community.general.bigpanda:
        component: '{{ component | b64encode }}'
        deployment_message: '{{ deployment_message | b64encode }}'
        description: '{{ description | b64encode }}'
        env: '{{ env | b64encode }}'
        hosts: '{{ hosts | b64encode }}'
        owner: '{{ owner | b64encode }}'
        source_system: '{{ source_system | b64encode }}'
        state: '{{ state | b64encode }}'
        token: '{{ token | b64encode }}'
        url: '{{ url | b64encode }}'
        validate_certs: '{{ validate_certs }}'
        version: '{{ version | b64encode }}'
      register: result

    - name: Test limit-related values with division-based operations
      community.general.bigpanda:
        component: '{{ component }}'
        deployment_message: '{{ deployment_message }}'
        description: '{{ description }}'
        env: '{{ env }}'
        hosts: '{{ hosts }}'
        owner: '{{ owner }}'
        source_system: '{{ source_system }}'
        state: '{{ state }}'
        token: '{{ token }}'
        url: '{{ url }}'
        validate_certs: '{{ validate_certs }}'
        version: '{{ version }}'
        limit: '{{ 20 / (ansible_play_hosts_all | length) }}'
      register: result

    - name: Test !null configuration values
      community.general.bigpanda:
        component: '{{ component }}'
        deployment_message: '{{ deployment_message }}'
        description: '{{ description }}'
        env: '{{ env }}'
        hosts: '{{ hosts }}'
        owner: '{{ owner }}'
        source_system: '{{ source_system }}'
        state: '{{ state }}'
        token: '{{ token }}'
        url: '{{ url }}'
        validate_certs: '{{ validate_certs }}'
        version: '{{ version }}'
        limit: !null
      register: result

    - name: Test random IP addresses
      community.general.bigpanda:
        component: '{{ component }}'
        deployment_message: '{{ deployment_message }}'
        description: '{{ description }}'
        env: '{{ env }}'
        hosts: '{{ hosts }}'
        owner: '{{ owner }}'
        source_system: '{{ source_system }}'
        state: '{{ state }}'
        token: '{{ token }}'
        url: '{{ url }}'
        validate_certs: '{{ validate_certs }}'
        version: '{{ version }}'
        ip_address: "10.1.{{ (ansible_inventory_hostname | regex_replace('^node', '') | int) + 1 }}.{{ (ansible_inventory_hostname | regex_replace('^node', '') | int) + 1 }}"
      register: result