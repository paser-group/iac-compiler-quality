---
- name: Ansible Compiler Debugger & Heuristic Test Playbook
  hosts: localhost
  gather_facts: false

  vars:
    # Define variables specific to the network architecture
    network_name: "node-net"
    subnet: "10.1.1.0/24"
    gateway: "10.1.1.254"

    # Set up Docker node details
    docker_nodes:
      - name: node1
        ip: "10.1.1.1"
      - name: node2
        ip: "10.1.1.2"
      - name: node3
        ip: "10.1.1.3"

    # Define community.network.avi_user module attributes
    avi_user_attributes:
      access: "{{ ['READ_WRITE'] }}"
      api_context: "{{ {'is_system_config': False} }}"
      api_version: "21.1.1"
      avi_api_patch_op: "replace"
      avi_api_update_method: "PUT"
      avi_credentials: "{{ {'username': 'admin', 'password': 'password123'} }}"
      avi_disable_session_cache_as_fact: false
      controller: "{{ groups['controllers'][0] }}"
      default_tenant_ref: "/api/tenant?name=admin"
      email: "admin@example.com"
      is_active: true
      is_superuser: true
      name: "admin"
      obj_password: "admin123"
      obj_username: "admin"
      password: "admin345"
      state: "present"
      tenant: "admin"
      tenant_uuid: "/api/tenant?name=admin"
      user_profile_ref: "/api/useraccountprofile?name=admin"
      username: "admin"

  tasks:
    - name: Configure network
      command: nmcli con add con-name {{ network_name }} ifname {{ network_name }} type vlan id 1 ip4 {{ subnet }} gw4 {{ gateway }}
      become: true

    - name: Configure Docker bridge network
      command: docker network create -d bridge --subnet {{ subnet }} --gateway {{ gateway }} {{ network_name }}
      become: true

    - name: Configure Docker nodes
      docker_container:
        name: "{{ item.name }}"
        image: ubuntu
        command: sleep infinity
        network_mode: "{{ network_name }}"
        ip: "{{ item.ip }}"
      with_items: "{{ docker_nodes }}"

    - name: Debug - Display Docker node IPs
      debug:
        msg: "Node {{ item.name }} - IP: {{ item.ip }}"
      with_items: "{{ docker_nodes }}"

    - name: Install dependencies on Docker nodes
      apt:
        name: python3
        update_cache: yes
      with_items: "{{ docker_nodes }}"

    - name: Print Ansible facts of Docker nodes
      ansible_facts:
      delegate_to: "{{ item.ip }}"
      with_items: "{{ docker_nodes }}"
      register: ansible_facts_result

    - name: Debug - Display Docker node Ansible facts
      debug:
        var: ansible_facts_result

    - name: Execute community.network.avi_user module
      community.network.avi_user:
        access: "{{ avi_user_attributes.access }}"
        api_context: "{{ avi_user_attributes.api_context }}"
        api_version: "{{ avi_user_attributes.api_version }}"
        avi_api_patch_op: "{{ avi_user_attributes.avi_api_patch_op }}"
        avi_api_update_method: "{{ avi_user_attributes.avi_api_update_method }}"
        avi_credentials: "{{ avi_user_attributes.avi_credentials }}"
        avi_disable_session_cache_as_fact: "{{ avi_user_attributes.avi_disable_session_cache_as_fact }}"
        controller: "{{ avi_user_attributes.controller }}"
        default_tenant_ref: "{{ avi_user_attributes.default_tenant_ref }}"
        email: "{{ avi_user_attributes.email }}"
        is_active: "{{ avi_user_attributes.is_active }}"
        is_superuser: "{{ avi_user_attributes.is_superuser }}"
        name: "{{ avi_user_attributes.name }}"
        obj_password: "{{ avi_user_attributes.obj_password }}"
        obj_username: "{{ avi_user_attributes.obj_username }}"
        password: "{{ avi_user_attributes.password }}"
        state: "{{ avi_user_attributes.state }}"
        tenant: "{{ avi_user_attributes.tenant }}"
        tenant_uuid: "{{ avi_user_attributes.tenant_uuid }}"
        user_profile_ref: "{{ avi_user_attributes.user_profile_ref }}"
        username: "{{ avi_user_attributes.username }}"