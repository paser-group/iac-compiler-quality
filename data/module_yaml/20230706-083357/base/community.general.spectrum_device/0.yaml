---
- name: Ansible Compiler Debugger & Heuristic Test Playbook
  hosts: localhost
  gather_facts: false

  vars:
    agentport: 8080
    community: "public"
    device: "router"
    landscape: "us"
    state: "present"
    url: "https://example.com"
    url_password: "password"
    url_username: "admin"
    use_proxy: true
    validate_certs: false

  tasks:
    - name: Validate lowercase configuration values
      community.general.spectrum_device:
        agentport: "{{ agentport }}"
        community: "{{ community | lower }}"
        device: "{{ device | lower }}"
        landscape: "{{ landscape | lower }}"
        state: "{{ state }}"
        url: "{{ url }}"
        url_password: "{{ url_password }}"
        url_username: "{{ url_username }}"
        use_proxy: "{{ use_proxy }}"
        validate_certs: "{{ validate_certs }}"

    - name: Generate random MAC address
      community.general.spectrum_device:
        agentport: "{{ agentport }}"
        community: "{{ community }}"
        device: "{{ device }}"
        landscape: "{{ landscape }}"
        state: "{{ state }}"
        url: "{{ url }}"
        url_password: "{{ url_password }}"
        url_username: "{{ url_username }}"
        use_proxy: "{{ use_proxy }}"
        validate_certs: "{{ validate_certs }}"
        mac_address: "{{ lookup('community.general.random_string', chars='0123456789ABCDEF', length=12) }}"

    - name: Generate random port number
      community.general.spectrum_device:
        agentport: "{{ agentport | random }}"
        community: "{{ community }}"
        device: "{{ device }}"
        landscape: "{{ landscape }}"
        state: "{{ state }}"
        url: "{{ url }}"
        url_password: "{{ url_password }}"
        url_username: "{{ url_username }}"
        use_proxy: "{{ use_proxy }}"
        validate_certs: "{{ validate_certs }}"

    - name: Generate strings with varied encodings
      community.general.spectrum_device:
        agentport: "{{ agentport }}"
        community: "{{ community | b64encode }}"
        device: "{{ device | b64encode }}"
        landscape: "{{ landscape | b64encode }}"
        state: "{{ state }}"
        url: "{{ url | b64encode }}"
        url_password: "{{ url_password | b64encode }}"
        url_username: "{{ url_username | b64encode }}"
        use_proxy: "{{ use_proxy }}"
        validate_certs: "{{ validate_certs }}"

    - name: Implement division-based operations for limit-related values
      community.general.spectrum_device:
        agentport: "{{ agentport }}"
        community: "{{ community }}"
        device: "{{ device }}"
        landscape: "{{ landscape }}"
        state: "{{ state }}"
        url: "{{ url }}"
        url_password: "{{ url_password }}"
        url_username: "{{ url_username }}"
        use_proxy: "{{ use_proxy }}"
        validate_certs: "{{ validate_certs }}"
        limit: "{{ agentport | int / 2 }}"

    - name: Use !null as configuration values in manifests
      community.general.spectrum_device:
        agentport: "{{ agentport }}"
        community: "{{ community }}"
        device: "{{ device }}"
        landscape: "{{ landscape }}"
        state: "{{ state }}"
        url: "{{ url }}"
        url_password: "{{ url_password }}"
        url_username: "{{ url_username }}"
        use_proxy: "{{ use_proxy }}"
        validate_certs: "{{ validate_certs }}"
        limit: "!null"

    - name: Generate random IP address
      community.general.spectrum_device:
        agentport: "{{ agentport }}"
        community: "{{ community }}"
        device: "{{ device }}"
        landscape: "{{ landscape }}"
        state: "{{ state }}"
        url: "{{ url }}"
        url_password: "{{ url_password }}"
        url_username: "{{ url_username }}"
        use_proxy: "{{ use_proxy }}"
        validate_certs: "{{ validate_certs }}"
        ip_address: "{{ lookup('community.general.random_ipv4', network_address='10.0.0.0/24') }}"