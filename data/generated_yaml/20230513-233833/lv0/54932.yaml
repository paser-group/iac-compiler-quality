
from azure.mgmt.redis import RedisManagementClient
from azure.common.credentials import ServicePrincipalCredentials

# Replace the below credentials and subscription ID with your own
creds = ServicePrincipalCredentials(
    client_id='<your-client-id>',
    secret='<your-client-secret>',
    tenant='<your-tenant-id>'
)

subscription_id = '<your-subscription-id>'

# Replace the below with your own resource group and Redis Cache name
resource_group_name = '<your-resource-group-name>'
redis_cache_name = '<your-redis-cache-name>'

redis_client = RedisManagementClient(creds, subscription_id)

# Set provisioning state to blocking by default
polling_interval = 30  # in seconds
redis_client.redis.create_or_update(
    resource_group_name,
    redis_cache_name,
    {
        "sku": {
            "name": "Basic",
            "family": "C",
            "capacity": 0
        },
        "location": "eastus",
        "properties": {
            "redisVersion": "6",
            "sku": {
                "name": "Basic",
                "family": "C",
                "capacity": 0
            },
            "enableNonSslPort": False,
            "minimumTlsVersion": "1.2",
            "replicasPerMaster": 0,
            "tenantSettings": {},
            "shardCount": 1,
            "provisioningState": "Creating",
            "staticIP": None,
            "subnetId": None,
            "firewallRules": [],
            "redisConfiguration": {},
            "enableReplication": False,
            "exportConfiguration": {},
            "importConfiguration": {},
            "accessKeys": None,
            "hostName": None,
            "sslPort": 6380,
            "nonSslPort": 6379
        },
        "provisioningStateBlocking": True,  # Set blocking by default
        "tags": {}
    }
).result(block=True, polling=True, interval=polling_interval)
