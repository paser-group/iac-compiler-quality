
from azure.common.credentials import ServicePrincipalCredentials
from azure.mgmt.compute import ComputeManagementClient

# Azure subscription credentials
subscription_id = '<subscription_id>'
tenant_id = '<tenant_id>'
client_id = '<client_id>'
client_secret = '<client_secret>'

# Resource group and VM states
resource_group_name = '<resource_group_name>'
vm_state = '<vm_state>'

# Initialize credentials and ComputeManagementClient
credentials = ServicePrincipalCredentials(
    client_id=client_id,
    secret=client_secret,
    tenant=tenant_id
)

compute_client = ComputeManagementClient(
    credentials=credentials,
    subscription_id=subscription_id
)

# Get the list of virtual machines in the resource group
vms = compute_client.virtual_machines.list(resource_group_name)

# Filter the virtual machines by state
running_vms = [vm for vm in vms if vm.instance_view.statuses[1].display_status == vm_state]

# Check if there are running virtual machines
if not running_vms:
    print(f"No running VMs found in the '{resource_group_name}' resource group.")
else:
    for vm in running_vms:
        # Do something with the running VMs
        print(f"Found a running VM: {vm.name}")
