python
from azure.common.credentials import ServicePrincipalCredentials
from azure.mgmt.network import NetworkManagementClient
from azure.mgmt.network.v2021_03_01.models import (
    NetworkInterface,
    NetworkSecurityGroup,
    SecurityRule,
)

# Fill in the values for your Azure service principal
subscription_id = "<subscription-id>"
client_id = "<client-id>"
secret = "<client-secret>"
tenant = "<tenant-id>"

# Fill in the values for network interface
resource_group_name = "<resource-group-name>"
location = "<location>"
nic_name = "<nic-name>"
vnet_name = "<vnet-name>"
subnet_name = "<subnet-name>"
nsg_name = "<nsg-name>"

# Create credentials
credentials = ServicePrincipalCredentials(
    client_id=client_id,
    secret=secret,
    tenant=tenant,
)

# Create the network management client object
network_client = NetworkManagementClient(credentials, subscription_id)

# Create the network security group object
nsg = NetworkSecurityGroup(
    location=location,
    security_rules=[
        SecurityRule(
            protocol="Tcp",
            destination_port_range="*",
            access="Allow",
            direction="Inbound",
            priority=1000,
            source_address_prefix="*",
            destination_address_prefix="*",
            name="default-allow-rdp",
        )
    ],
)

# Create the network interface object
nic = NetworkInterface(
    location=location,
    ip_configurations=[
        {
            "name": "ipconfig1",
            "subnet": {"id": f"/subscriptions/{subscription_id}/resourceGroups/{resource_group_name}/providers/Microsoft.Network/virtualNetworks/{vnet_name}/subnets/{subnet_name}"},
            "public_ip_address": None,
        }
    ],
    network_security_group={"id": f"/subscriptions/{subscription_id}/resourceGroups/{resource_group_name}/providers/Microsoft.Network/networkSecurityGroups/{nsg_name}"},
)

# Create the network security group and network interface
nsg_result = network_client.network_security_groups.create_or_update(resource_group_name, nsg_name, nsg)
nic_result = network_client.network_interfaces.create_or_update(resource_group_name, nic_name, nic)

# Print the results
print(nsg_result)
print(nic_result)
