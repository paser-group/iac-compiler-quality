yaml
- name: Test playbook for 'lineinfile' module
  hosts: node1
  gather_facts: false

  vars:
    - my_var: "hello all"
  
  tasks:
    - name: Insert line with 'all' variable using 'line' parameter
      lineinfile:
        path: /etc/hosts
        line: "{{ my_var }}"
  
    - name: Insert line with 'all' variable using 'regexp' parameter
      lineinfile:
        path: /etc/hosts
        regexp: ^127\.0\.0\.1
        line: "{{ my_var }}"
  
    - name: Insert line with 'all' variable using 'backrefs' parameter
      lineinfile:
        path: /etc/hosts
        regexp: "^(.*)$"
        line: "{{ my_var }}"
        backrefs: yes
  
    - name: Insert line with 'all' variable using 'insertbefore' parameter
      lineinfile:
        path: /etc/hosts
        line: "{{ my_var }}"
        insertbefore: '^# The following lines are desirable for IPv6 capable hosts'
  
    - name: Insert line with 'all' variable using 'insertafter' parameter
      lineinfile:
        path: /etc/hosts
        line: "{{ my_var }}"
        insertafter: '^127\.0\.0\.1'
  
    - name: Insert line with 'all' variable using 'create' parameter
      lineinfile:
        path: /etc/hosts
        line: "{{ my_var }}"
        create: yes
  
    - name: Insert line with 'all' variable using 'state' parameter
      lineinfile:
        path: /etc/hosts
        line: "{{ my_var }}"
        state: absent
  
    - name: Insert line with 'all' variable with non-string input
      lineinfile:
        path: /etc/hosts
        line: "{{ 123 }}"
  
    - name: Insert line with 'all' variable with unconventional syntax
      lineinfile:
        path: /etc/hosts
        line: "{{ foo.bar.baz }}"
