
- name: Test the role parameter comparison error
  hosts: node1
  gather_facts: no
  tasks:
    - name: Test conventional syntax with normal role parameters
      import_role:
        name: example_role
        tasks_from: main.yml
      vars:
        role_param: "{{ 'value' }}"
        role_param2: "{{ 'value2' }}"

    - name: Test unconventional syntax with role parameter set to dictionary
      import_role:
        name: example_role
        tasks_from: main.yml
      vars:
        role_param: "{ 'key': 'value' }"

    - name: Test unconventional syntax with role parameter set to list
      import_role:
        name: example_role
        tasks_from: main.yml
      vars:
        role_param: "[ 'value1', 'value2' ]"

    - name: Test unexpected input by passing a non-existent role
      import_role:
        name: nonexistent_role
        tasks_from: main.yml
      ignore_errors: yes

    - name: Test unexpected input by passing conflicting role parameters
      import_role:
        name: example_role
        tasks_from: main.yml
      vars:
        role_param: "{{ 'value' }}"
      vars_prompt:
        - name: role_param
          prompt: "Enter role parameter value"
          private: no
      when: false

    - name: Test edge cases with empty role parameter
      import_role:
        name: example_role
        tasks_from: main.yml
      vars:
        role_param: ""

    - name: Test edge cases with null role parameter
      import_role:
        name: example_role
        tasks_from: main.yml
      vars:
        role_param: null

    - name: Test edge cases with undefined role parameter
      import_role:
        name: example_role
        tasks_from: main.yml
      vars:
        role_param: "{{ undefined_var }}"
      ignore_errors: yes

    - name: Test edge cases with role parameter set to specific data types
      import_role:
        name: example_role
        tasks_from: main.yml
      vars:
        role_param: true
