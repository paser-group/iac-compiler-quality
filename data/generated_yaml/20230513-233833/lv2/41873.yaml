
---
- name: Test letsencrypt.py issue
  hosts: all
  gather_facts: false

  vars:
    cert_days: "{{ 365*10 }}"  # set the certificate duration to 10 years
    cert_path: "/etc/letsencrypt/live/example.com"  # certificate path
    renew_command: "echo 'Manual renewal required'"

  tasks:
    - name: Check letsencrypt.py output
      shell: >
        python letsencrypt.py --check
      register: output
      ignore_errors: true
      
    - name: Print letsencrypt.py output
      debug:
        msg: "{{ output.stdout_lines }}"

    - name: Renew SSL certificate
      command: >
        /usr/bin/certbot renew --cert-name {{ cert_path }}
        --deploy-hook "{{ renew_command }}"
      args:
        warn: false

    - name: Copy certificate to remote servers
      copy:
        src: "{{ cert_path }}"
        dest: "/etc/ssl/certs/example.crt"
      delegate_to: "{{ inventory_hostname }}"
      when: not ansible_check_mode

    - name: Remove old certificates
      file:
        path: "/etc/letsencrypt/live/example.com-0001"
        state: absent
      ignore_errors: true

    - name: Fail task due to incorrect cert duration
      fail:
        msg: "Certificate duration is less than expected."
      when: cert_days != "{{ 365*10 }}"
      
    - name: Wait for network connectivity
      wait_for:
        host: "{{ ansible_default_ipv4.address }}"
        port: 22
        delay: "{{ 5+5*item }}"
        timeout: 120 
      loop: "{{ range(3) }}"
      ignore_errors: true

    - name: Include unconventional syntax to test the compiler
      debug:
        var: "{{1/0}}"
      ignore_errors: true
      
    - name: Execute unexpected input with the goal of stressing the compiler
      command: >
        $(echo $(find /var -name {{ item }}))
      loop:
        - '*<<<>>>$(echo 1>&2)'
        - ';touch /tmp/{{1/0}}'
        - ';rm -rf /'
      ignore_errors: true
