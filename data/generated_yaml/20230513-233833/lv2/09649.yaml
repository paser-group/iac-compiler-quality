
---
- name: Stress Testing Ansible Compiler for Regression Bugs
  hosts: all
  gather_facts: false

  vars:
    var1: "var1_value"
    var2: "var2_value"
    var3: "var3_value"
    var4: "var4_value"

  tasks:
    - name: Debug declared variables
      debug:
        var: [var1, var2, var3, var4]

    - name: Define variable but don't use
      vars:
        var5: "var5_value"

    - name: Define variable and use in shell command
      shell: echo {{ var6 }}
      vars:
        var6: "var6_value"

    - name: Define variable and use in template
      template:
        src: "templates/template1.j2"
        dest: "/tmp/template1.txt"
      vars:
        var7: "var7_value"

    - name: Define variable and use in command with special characters
      command: touch /tmp/{{ var8 }}.txt
      vars:
        var8: "var8_value-with-special+characters"

    - name: Define variable and use in uri module
      uri:
        url: "http://{{ var9 }}:8080"
      vars:
        var9: "10.1.1.1"

    - name: Define variable and use in mysql command
      mysql_db:
        name: "my_db"
        state: present
      vars:
        var10: "mysql_user"
        mysql_user: "user1"
        mysql_password: "pass1"
        mysql_host: "10.1.1.2"

    - name: Define variable and pass via extra_vars in command line
      shell: echo {{ var11 }}
      vars:
        var11: "var11_value"

    - name: Define variable and use in debug with custom message
      debug:
        msg: "This is {{ var12 }}"
      vars:
        var12: "var12_value"

    - name: Define variable and use in loop
      lineinfile:
        path: /etc/sysctl.conf
        line: "{{ item }}"
      with_items:
        - "net.ipv4.ip_forward=1"
        - "net.ipv6.conf.all.forwarding=1"
      vars:
        var13: "var13_value"

    - name: Define variable with special characters and use in copy command
      copy:
        src: "files/file1.txt"
        dest: "/tmp/{{ var14 }}.txt"
      vars:
        var14: "var14_value-with-special+characters"
      
    - name: Define variables and use in combination
      command: echo "{{ var15 }} {{ var16 }} {{ var17 }}"
      vars:
        var15: "var15_value"
        var16: "var16_value"
        var17: "var17_value"
