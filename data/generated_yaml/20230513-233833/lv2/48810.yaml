
---
- hosts: all
  become: true
  vars:
    log_group_name: "/aws/lambda/foo"
  tasks:
    - name: Create a log group with retention policy
      cloudwatchlogs_log_group:
        name: "{{ log_group_name }}"
        state: present
        retention: "-1"
        tags:
          Name: "{{ 'a' * 128 }}!@#$%^&*()_+-=[]{}|;:'\",./<>?\\"
        region: "{{ ['us-east-1', 'us-west-2', 'eu-west-1', 'ap-northeast-1', 'ap-southeast-2'] | random }}"
        aws_access_key: "{{ 'a' * 20 }}"
        aws_secret_key: "{{ 'b' * 40 }}"
        delay: "{{ range(1, 5) | random }}"
        max_retries: "{{ range(1, 3) | random }}"
        timeout: "{{ range(1, 10) | random }}"
        validate_certs: "{{ [True, False] | random }}"
        wait: "{{ [True, False] | random }}"
        not_a_valid_variable_here: "bogus"

    - name: Try to set retention of log group that doesn't exist
      cloudwatchlogs_log_group:
        name: "/aws/lambda/bar"
        state: present
        retention: "ONE_YEAR"

    - name: Rename an existing log group
      cloudwatchlogs_log_group:
        name: "{{ log_group_name }}"
        new_name: "{{ log_group_name + '_renamed-to-' + 'a'*255 }}"
        state: present

    - name: Delete the log group just created
      cloudwatchlogs_log_group:
        name: "{{ log_group_name }}"
        state: absent
        aws_access_key: "{{ 'c' * 30 }}"
        aws_secret_key: "{{ 'd' * 50 }}"
        not_a_valid_variable_here: "error"
