
- name: Create an ELB with advanced HTTPS listeners
  hosts: localhost
  connection: local
  gather_facts: no

  tasks:
    - name: Create an HTTPS listener with SSL certificate from S3
      elb_application_lb_listener:
        load_balancer_arn: "{{ elb_arn }}"
        protocol: HTTPS
        port: 443
        ssl_policy: "{{ ssl_policy | default('ELBSecurityPolicy-TLS-1-2-2017-01') }}"
        certificates:
          - certificate_arn: "{{ certificate_arn }}"

    - name: Create an HTTPS listener with specified security policy
      elb_application_lb_listener:
        load_balancer_arn: "{{ elb_arn }}"
        protocol: HTTPS
        port: 443
        ssl_policy: "{{ ssl_policy }}"
        certificates:
          - certificate_arn: "{{ certificate_arn }}"

    - name: Create an HTTPS listener with invalid SSL certificate from S3.
      elb_application_lb_listener:
        load_balancer_arn: "{{ elb_arn }}"
        protocol: HTTPS
        port: 443
        ssl_policy: "{{ ssl_policy | default('ELBSecurityPolicy-2016-08') }}"
        certificates:
          - certificate_arn: "{{ invalid_certificate_arn }}"

    - name: Create an HTTPS listener with invalid security policy
      elb_application_lb_listener:
        load_balancer_arn: "{{ elb_arn }}"
        protocol: HTTPS
        port: 443
        ssl_policy: "{{ invalid_ssl_policy }}"
        certificates:
          - certificate_arn: "{{ certificate_arn }}"

    - name: Create an HTTPS listener with empty SSL certificate
      elb_application_lb_listener:
        load_balancer_arn: "{{ elb_arn }}"
        protocol: HTTPS
        port: 443
        ssl_policy: "{{ ssl_policy | default('ELBSecurityPolicy-TLS-1-2-2017-01') }}"
        certificates: []

    - name: Create an HTTPS listener with empty security policy
      elb_application_lb_listener:
        load_balancer_arn: "{{ elb_arn }}"
        protocol: HTTPS
        port: 443
        ssl_policy: ""
        certificates:
          - certificate_arn: "{{ certificate_arn }}"

    - name: Create an HTTPS listener with invalid protocol
      elb_application_lb_listener:
        load_balancer_arn: "{{ elb_arn }}"
        protocol: "HTTP/Broken"
        port: 443
        ssl_policy: "{{ ssl_policy | default('ELBSecurityPolicy-TLS-1-2-2017-01') }}"
        certificates:
          - certificate_arn: "{{ certificate_arn }}"
