
- hosts: localhost
  vars:
    databases:
      - name: test_db
        state: present
        dump: /tmp/test_db.sql
        encoding: utf8
        ssl_ca: "{{ ['ssl-ca.pem', 'ssl-ca.txt'] | random }}"
      - name: nonexistent_db
        state: absent
  tasks:
    # Test creating a database with a null ssl_ca value
    - name: Test 1 - Create database with a null ssl_ca value
      mysql_db:
        name: "{{ databases[0].name }}"
        state: "{{ databases[0].state }}"
        dump: "{{ databases[0].dump }}"
        encoding: "{{ databases[0].encoding }}"
        ssl_ca: null

    # Test creating a database with an empty ssl_ca file 
    - name: Test 2 - Create database with an empty ssl_ca file
      mysql_db:
        name: "{{ databases[0].name }}"
        state: "{{ databases[0].state }}"
        dump: "{{ databases[0].dump }}"
        encoding: "{{ databases[0].encoding }}"
        ssl_ca: ""

    # Test creating a database with a nonexistent ssl_ca file 
    - name: Test 3 - Create database with a nonexistent ssl_ca file
      mysql_db:
        name: "{{ databases[0].name }}"
        state: "{{ databases[0].state }}"
        dump: "{{ databases[0].dump }}"
        encoding: "{{ databases[0].encoding }}"
        ssl_ca: /tmp/nonexistent_ssl_ca.pem

    # Test dumping a nonexistent database
    - name: Test 4 - Dump nonexistent database
      mysql_db:
        name: "{{ databases[1].name }}"
        state: "{{ databases[1].state }}"
        dump: "{{ databases[1].dump }}"

    # Test dumping a database to a nonexistent directory
    - name: Test 5 - Dump database to nonexistent directory
      mysql_db:
        name: "{{ databases[0].name }}"
        state: dump
        dump: /nonexistent_directory/test_db.sql
        encoding: "{{ databases[0].encoding }}"
        ssl_ca: "{{ databases[0].ssl_ca }}"

    # Test dumping a database with different encodings
    - name: Test 6 - Dump database with different encodings
      mysql_db:
        name: "{{ databases[0].name }}"
        state: dump
        dump: /tmp/test_db_utf16le.sql
        encoding: utf16le
        ssl_ca: "{{ databases[0].ssl_ca }}"

    # Test creating a database with an invalid state value
    - name: Test 7 - Create database with invalid state value
      mysql_db:
        name: "{{ databases[0].name }}"
        state: "{{ databases[1].dump }}"
        dump: "{{ databases[0].dump }}"
        encoding: "{{ databases[0].encoding }}"
        ssl_ca: "{{ databases[0].ssl_ca }}"

    # Test creating a database with an invalid encoding value
    - name: Test 8 - Create database with invalid encoding value
      mysql_db:
        name: "{{ databases[0].name }}"
        state: "{{ databases[0].state }}"
        dump: "{{ databases[0].dump }}"
        encoding: garbage
        ssl_ca: "{{ databases[0].ssl_ca }}"

    # Test creating a database with an invalid ssl_ca path
    - name: Test 9 - Create database with invalid ssl_ca path
      mysql_db:
        name: "{{ databases[0].name }}"
        state: "{{ databases[0].state }}"
        dump: "{{ databases[0].dump }}"
        encoding: "{{ databases[0].encoding }}"
        ssl_ca: /garbage_ssl_ca_path/garbage_ssl_ca.pem

# End of Playbook
