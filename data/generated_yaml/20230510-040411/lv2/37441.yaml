
- name: Testing Ansible Compiler
  hosts: localhost
  gather_facts: false

  tasks:
    - name: Condition with null variable
      debug:
        msg: "Condition evaluated as true"
      when: null

    - name: Condition with undefined variable
      debug:
        msg: "Condition evaluated as false"
      when: "{{ foo }}"

    - name: Condition with incomplete expression
      debug:
        msg: "Condition evaluated as false"
      when: "{{ foo }"

    - name: Condition with non-boolean expression
      debug:
        msg: "Condition evaluated as false"
      when: "{{ 42 }}"

    - name: Condition with expression that evaluates to boolean
      debug:
        msg: "Condition evaluated as false"
      when: "{{ False }} or {{ True }}"

    - name: Condition with empty string
      debug:
        msg: "Condition evaluated as true"
      when: ""

    - name: Condition with string that evaluates to false
      debug:
        msg: "Condition evaluated as false"
      when: "false"

    - name: Condition with string that evaluates to true
      debug:
        msg: "Condition evaluated as true"
      when: "true"

    - name: Condition with string containing invalid characters
      debug:
        msg: "Condition evaluated as false"
      when: "{{ foo#bar }}"

    - name: Condition with string that contains valid Jinja2 syntax
      debug:
        msg: "{{ foo|upper|first }} evaluated to true"
      when: "{{ foo|upper|first }}"

    - name: Condition with list of values
      debug:
        msg: "Condition evaluated as true"
      when:
        - ""
        - 0
        - false
        - null
        - []

    - name: Condition with dict
      debug:
        msg: "Condition evaluated as true"
      when:
        foo: true
        bar: false
        baz: ""

    - name: Condition with nested expression
      debug:
        msg: "Condition evaluated as true"
      when: "{{ foo and (bar or baz) }}"

    - name: Condition with undefined filter
      debug:
        msg: "Condition evaluated as false"
      when: "{{ foo | undefined_filter }}"

    - name: Condition with filter that returns a non-boolean
      debug:
        msg: "Condition evaluated as false"
      when: "{{ foo | length }}"

    - name: Condition with unexpected input - Python code syntax
      debug:
        msg: "Condition evaluated as false"
      when: "{% if 1 == 2: %}false{% endif %}"

    - name: Condition with unexpected input - Shell command
      debug:
        msg: "Condition evaluated as true"
      when: "$(echo true)"

