
- name: Use os_port_facts module with fixed_ips.ip_address filter
  hosts: localhost
  gather_facts: no
  tasks:
    - name: Get ports with fixed IP address 192.168.1.1
      os_port_facts:
        filters:
          fixed_ips.ip_address: 192.168.1.1
      register: port_with_fixed_ip

    - name: Print result
      debug:
        var: port_with_fixed_ip

    - name: Get ports with fixed IP address empty string
      os_port_facts:
        filters:
          fixed_ips.ip_address: ""
      register: port_with_empty_ip

    - name: Print result
      debug:
        var: port_with_empty_ip

    - name: Get ports with non-existent IP address
      os_port_facts:
        filters:
          fixed_ips.ip_address: 10.0.0.1
      register: port_with_non_existing_ip

    - name: Print result
      debug:
        var: port_with_non_existing_ip

    - name: Get ports with invalid IP version
      os_port_facts:
        filters:
          fixed_ips.ip_address: "invalid"
      register: port_with_invalid_ip_version

    - name: Print result
      debug:
        var: port_with_invalid_ip_version

    - name: Get ports with invalid IP address format
      os_port_facts:
        filters:
          fixed_ips.ip_address: "192/168/1/1"
      register: port_with_invalid_ip_format

    - name: Print result
      debug:
        var: port_with_invalid_ip_format

    - name: Get ports with multiple fixed IP addresses
      os_port_facts:
        filters:
          fixed_ips.ip_address:
            - "192.168.1.1"
            - "192.168.2.2"
      register: port_with_multiple_ip

    - name: Print result
      debug:
        var: port_with_multiple_ip

    - name: Get ports with fixed IP and another filter
      os_port_facts:
        filters:
          fixed_ips.ip_address: "192.168.1.1"
          name: "port1"
      register: port_with_ip_and_filter

    - name: Print result
      debug:
        var: port_with_ip_and_filter

