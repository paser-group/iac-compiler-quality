
---
- hosts: localhost
  gather_facts: false

  vars:
    my_param_store:
      Name: "my-param"
      Type: "String"
      Value: "my-value"
      Description: "{{ my_description }}"

  tasks:
  - name: Set SSM Parameter Store value with a undefined variable
    aws_ssm_parameter_store:
      name: "{{ my_param_store.Name }}"
      type: "{{ my_param_store.Type }}"
      value: "{{ my_param_store.Value }}"
      description: "{{ my_param_store.Description }} {{ undefined_var }}"

  - name: Set invalid SSM Parameter Store value using chars that are not allowed
    aws_ssm_parameter_store:
      name: "{{ my_param_store.Name }}"
      type: "{{ my_param_store.Type }}"
      value: "%#@()~!{}'\""
      description: "{{ my_param_store.Description }}"
      
  - name: Attempt to get an SSM Parameter Store value that doesn't exist
    aws_ssm_parameter_store_get:
      name: "non-existent-param"

  - name: Set SSM Parameter Store value with a very long description
    aws_ssm_parameter_store:
      name: "{{ my_param_store.Name }}"
      type: "{{ my_param_store.Type }}"
      value: "{{ my_param_store.Value }}"
      description: "{{ 'a'*256 }}"
       
  - name: Set SSM Parameter Store value with an empty name
    aws_ssm_parameter_store:
      name: ""
      type: "{{ my_param_store.Type }}"
      value: "{{ my_param_store.Value }}"
      description: "{{ my_param_store.Description }}"
      
  - name: Set SSM Parameter Store value with an empty value
    aws_ssm_parameter_store:
      name: "{{ my_param_store.Name }}"
      type: "{{ my_param_store.Type }}"
      value: ""
      description: "{{ my_param_store.Description }}"
        
  - name: Set SSM Parameter Store value with an empty type
    aws_ssm_parameter_store:
      name: "{{ my_param_store.Name }}"
      type: ""
      value: "{{ my_param_store.Value }}"
      description: "{{ my_param_store.Description }}"         
