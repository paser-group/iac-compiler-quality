
- name: Test lookup error handling
  hosts: localhost
  vars:
    lookup_dict:
      key1: value1
      key2: value2
      key3: value3
  tasks:
    - name: Lookup key4, expect error
      debug:
        msg: "{{ lookup('dict', lookup_dict, 'key4') }}"
      ignore_errors: True
    - name: Lookup key2 using dot notation
      debug:
        msg: "{{ lookup_dict.key2 }}"
    - name: Lookup key1 using bracket notation
      debug:
        msg: "{{ lookup_dict['key1'] }}"
    - name: Lookup using variable key
      vars:
        variable_key: "key3"
      debug:
        msg: "{{ lookup('dict', lookup_dict, variable_key) }}"
    - name: Test error handling with undefined variable
      debug:
        msg: "{{ lookup('dict', undefined_var, 'key1') }}"
      ignore_errors: True
    - name: Test error handling with invalid syntax
      debug:
        msg: "{{ lookup('dict', lookup_dict, key4') }}"
      ignore_errors: True
    - name: Test error handling with incompatible type
      vars:
        lookup_string: "some text"
      debug:
        msg: "{{ lookup('dict', lookup_string, 'key1') }}"
      ignore_errors: True
