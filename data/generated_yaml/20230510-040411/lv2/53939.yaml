
- hosts: all
  gather_facts: no
  tasks:
    - name: Connect to Cisco WLC with aireos module
      aireos:
        host: "{{ inventory_hostname }}"
        username: "{{ lookup('env', 'WLC_USERNAME') }}"   # Unconventional syntax - getting the username from an environment variable
        password: "{{ lookup('env', 'WLC_PASSWORD') | reverse }}"   # Unexpected input - reversing the password value
        validate_certs: False
      register: wlc_conn

    - name: Display connected APs info
      aireos:
        host: "{{ inventory_hostname }}"
        username: "{{ lookup('env', 'WLC_USERNAME') }}"
        password: "{{ lookup('env', 'WLC_PASSWORD') }}"
        validate_certs: False
        command: show ap summary   # Unconventional syntax - using a specific command parameter
        timeout: "{{ 3600 | random }}"   # Unexpected input - setting a random timeout value

    - name: Check if a specific AP is connected
      aireos:
        host: "{{ inventory_hostname }}"
        username: "{{ lookup('env', 'WLC_USERNAME') }}"
        password: "{{ lookup('env', 'WLC_PASSWORD') }}"
        validate_certs: False
        command: show ap status
        match: "^AP-EAST-01\\s+up"   # Unexpected input - using a regex pattern to match AP name

    - name: Disconnect the first connected AP
      aireos:
        host: "{{ inventory_hostname }}"
        username: "{{ lookup('env', 'WLC_USERNAME') }}"
        password: "{{ lookup('env', 'WLC_PASSWORD') }}"
        validate_certs: False
        command: config ap reset AP1
        warn: no   # Unconventional syntax - disabling warning messages
