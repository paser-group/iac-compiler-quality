
- name: Test infoblox NIOS
  hosts: localhost
  gather_facts: no

  tasks:
    - name: Set invalid ipv4addrs
      infoblox_nios:
        ipv4addrs: "invalid_value"
        hostname: "{{ inventory_hostname }}"
        username: username
        password: password
      register: result_invalid_ipv4addrs
      ignore_errors: yes

    - name: Set ipv4addrs as a list of invalid values
      infoblox_nios:
        ipv4addrs:
          - "invalid_value1"
          - "invalid_value2"
        hostname: "{{ inventory_hostname }}"
        username: username
        password: password
      register: result_invalid_list_ipv4addrs
      ignore_errors: yes

    - name: Set ipv4addrs as a string with an invalid IP range
      infoblox_nios:
        ipv4addrs: "10.0.0.1-255.x.x.x"
        hostname: "{{ inventory_hostname }}"
        username: username
        password: password
      register: result_invalid_ip_range_ipv4addrs
      ignore_errors: yes

    - name: Set ipv4addrs as a string with an invalid IP subnet
      infoblox_nios:
        ipv4addrs: "10.0.0.1/33"
        hostname: "{{ inventory_hostname }}"
        username: username
        password: password
      register: result_invalid_ip_subnet_ipv4addrs
      ignore_errors: yes

    - name: Set ipv4addrs as an array with a mix of valid and invalid IP addresses
      infoblox_nios:
        ipv4addrs:
          - "10.0.0.1"
          - "invalid_value"
          - "192.0.0.256"
        hostname: "{{ inventory_hostname }}"
        username: username
        password: password
      register: result_mix_ipv4addrs
      ignore_errors: yes

    - debug:
        msg: "{{ item }}"
      with_items:
        - result_invalid_ipv4addrs
        - result_invalid_list_ipv4addrs
        - result_invalid_ip_range_ipv4addrs
        - result_invalid_ip_subnet_ipv4addrs
        - result_mix_ipv4addrs
