
---
- name: Test osx_defaults array_add
  hosts: localhost
  gather_facts: no

  vars:
    new_key_name: "'New Key Name'"
    new_array_value: "['Array Value 1', 'Array Value 2']"
    new_string_value: "'String Value'"

  tasks:
    # Test adding array to new key
    - name: Add array to new key
      shell: defaults write com.apple.Terminal {{ new_key_name }} {{ new_array_value }} array-add
      register: add_array_to_new_key
      ignore_errors: yes

    # Test adding string to new key
    - name: Add string to new key
      shell: defaults write com.apple.Terminal {{ new_key_name }} {{ new_string_value }} array-add
      register: add_string_to_new_key
      ignore_errors: yes

    # Test adding array to existing key
    - name: Add array to existing key
      shell: defaults write com.apple.Terminal "Existing Key Name" -array '{{ new_array_value }}' -array-add
      register: add_array_to_existing_key
      ignore_errors: yes

    # Test adding string to existing key
    - name: Add string to existing key
      shell: defaults write com.apple.Terminal "Existing Key Name" '{{ new_string_value }}' array-add
      register: add_string_to_existing_key
      ignore_errors: yes

    # Test adding multiple arrays to new key
    - name: Add multiple arrays to new key
      shell: defaults write com.apple.Terminal {{ new_key_name }} '{{ new_array_value }}' '{{ new_array_value }}' array-add
      register: add_multiple_arrays_to_new_key
      ignore_errors: yes

    # Test adding multiple strings to new key
    - name: Add multiple strings to new key
      shell: defaults write com.apple.Terminal {{ new_key_name }} '{{ new_string_value }}' '{{ new_string_value }}' array-add
      register: add_multiple_strings_to_new_key
      ignore_errors: yes

    # Test adding array with nested array to new key
    - name: Add array with nested array to new key
      shell: defaults write com.apple.Terminal {{ new_key_name }} "['{{ new_array_value }}',['{{ new_array_value }}']]" array-add
      register: add_nested_array_to_new_key
      ignore_errors: yes

    # Test adding string with escape sequences to new key
    - name: Add string with escape sequences to new key
      shell: defaults write com.apple.Terminal {{ new_key_name }} "'\"String \\ Value\"'"
      register: add_escaped_string_to_new_key
      ignore_errors: yes

    # Test adding string with UTF-8 characters to new key
    - name: Add string with UTF-8 characters to new key
      shell: defaults write com.apple.Terminal {{ new_key_name }} "Árvíztűrő tükörfúrógép"
      register: add_utf8_string_to_new_key
      ignore_errors: yes

    # Test adding array with missing closing quote to new key
    - name: Add array with missing closing quote to new key
      shell: defaults write com.apple.Terminal {{ new_key_name }} "['{{ new_array_value }}',['{{ new_array_value }}']]" array-add
      register: add_array_missing_quote_to_new_key
      ignore_errors: yes

    # Test adding array with missing starting quote to new key
    - name: Add array with missing starting quote to new key
      shell: defaults write com.apple.Terminal {{ new_key_name }} "['{{ new_array_value }}',['{{ new_array_value }}']]" array-add
      register: add_array_missing_start_quote_to_new_key
      ignore_errors: yes

    # Test adding string with missing closing quote to new key
    - name: Add string with missing closing quote to new key
      shell: defaults write com.apple.Terminal {{ new_key_name }} "'{\"Key\":\"Value\"'"
      register: add_string_missing_quote_to_new_key
      ignore_errors: yes

    # Test adding string with missing starting quote to new key
    - name: Add string with missing starting quote to new key
      shell: defaults write com.apple.Terminal {{ new_key_name }} "'{\"Key\":\"Value\"'"
      register: add_string_missing_start_quote_to_new_key
      ignore_errors: yes

    # Test adding array with unconventional spacing to new key
    - name: Add array with unconventional spacing to new key
      shell: defaults write com.apple.Terminal {{ new_key_name }} " [ '{{ new_array_value }}' , '{{ new_array_value }}' ] " array-add
      register: add_array_unconventional_spacing_to_new_key
      ignore_errors: yes

    # Test adding string with unconventional spacing to new key
    - name: Add string with unconventional spacing to new key
      shell: defaults write com.apple.Terminal {{ new_key_name }} " {\n \"Key\"  :   \"Value\"  \n } "
      register: add_string_unconventional_spacing_to_new_key
      ignore_errors: yes

    # Test adding array with unconventional quotes to new key
    - name: Add array with unconventional quotes to new key
      shell: defaults write com.apple.Terminal {{ new_key_name }} '[ “{{ new_array_value }}”, “{{ new_array_value }}” ]' array-add
      register: add_array_unconventional_quotes_to_new_key
      ignore_errors: yes

    # Test adding string with unconventional quotes to new key
    - name: Add string with unconventional quotes to new key
      shell: defaults write com.apple.Terminal {{ new_key_name }} “{\n‘Key‘: ‘Value‘\n}“
      register: add_string_unconventional_quotes_to_new_key
      ignore_errors: yes

    # Print results
    - name: Print results
      debug:
        var: item.stdout
      with_items:
        - add_array_to_new_key
        - add_string_to_new_key
        - add_array_to_existing_key
        - add_string_to_existing_key
        - add_multiple_arrays_to_new_key
        - add_multiple_strings_to_new_key
        - add_nested_array_to_new_key
        - add_escaped_string_to_new_key
        - add_utf8_string_to_new_key
        - add_array_missing_quote_to_new_key
        - add_array_missing_start_quote_to_new_key
        - add_string_missing_quote_to_new_key
        - add_string_missing_start_quote_to_new_key
        - add_array_unconventional_spacing_to_new_key
        - add_string_unconventional_spacing_to_new_key
        - add_array_unconventional_quotes_to_new_key
        - add_string_unconventional_quotes_to_new_key
