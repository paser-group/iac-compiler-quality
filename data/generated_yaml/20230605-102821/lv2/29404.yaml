
---

- name: Test the osx_defaults module
  hosts: all
  gather_facts: false

  tasks:
    - name: Set osx_defaults with different types
      osx_defaults:
        domain: com.test.defaults
        key: test_key1
        value: "{{ item.value }}"
        type: "{{ item.type }}"
      with_items:
        - { value: "test_value_1", type: "string" }
        - { value: 123, type: "int" }
        - { value: true, type: "bool" }
        - { value: [1,2,3], type: "array" }
        - { value: {"foo":"bar", "baz":"foo"}, type: "dict" }

    - name: Get the osx_defaults values
      osx_defaults:
        domain: com.test.defaults
        key: test_key1
      register: result

    - name: Print osx_defaults registered variable values
      debug:
        var: result

    - name: Remove the osx_defaults values
      osx_defaults:
        domain: com.test.defaults
        key: test_key1
        state: absent

# End of playbook

---

In the above play, we stress test the osx_defaults module by setting values of different types for the same key in the same domain. We then fetch the values and print them using the "debug" module. Finally, we remove all the values set using the above play using the "state: absent" parameter in the "osx_defaults" module. The aim of this playbook is to catch any potential Type mismatch error that may arise from the aforementioned GitHub issue.
