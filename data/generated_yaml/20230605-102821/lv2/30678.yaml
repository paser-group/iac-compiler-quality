
- hosts: all
  gather_facts: no
  tasks:
    # Define an invalid event pattern filter
    - name: Test invalid event pattern filter
      cloudwatchevent_rule:
        name: invalid-event-pattern
        state: present
        event_pattern: "{bad_pattern}"
      ignore_errors: yes
      
    # Try to create a rule with a missing mandatory parameter (name)
    - name: Test missing parameter
      cloudwatchevent_rule:
        state: present
      ignore_errors: yes

    # Use a non-existent state parameter
    - name: Test non-existent parameter
      cloudwatchevent_rule:
        name: test-rule
        state: invalid-state
      ignore_errors: yes

    # Pass a non-string value for an attribute
    - name: Test non-string value
      cloudwatchevent_rule:
        name: test-rule
        schedule_expression: 123
      ignore_errors: yes

    # Pass an invalid JSON object for the event pattern filter
    - name: Test invalid JSON object
      cloudwatchevent_rule:
        name: test-rule
        event_pattern: '{"source": {}}'
      ignore_errors: yes

    # Pass an invalid JSON string for the event pattern filter
    - name: Test invalid JSON string
      cloudwatchevent_rule:
        name: test-rule
        event_pattern: '{invalid_json_string'
      ignore_errors: yes
      
    # Try to remove a non-existent rule
    - name: Test non-existent rule removal
      cloudwatchevent_rule:
        name: non-existent-rule
        state: absent
      ignore_errors: yes
