
- name: Test delegate_to and haproxy module
  hosts: all
  gather_facts: false

  tasks:
    - name: Install haproxy
      apt:
        name: haproxy
        state: present

    - name: Generate haproxy config file
      copy:
        dest: "/etc/haproxy/haproxy.cfg"
        content: |
          global
            log /dev/log local0
            log /dev/log local1 notice
            chroot /var/lib/haproxy
            stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
            stats timeout 30s
            user haproxy
            group haproxy
            daemon

          defaults
            log global
            mode http
            option httplog
            option dontlognull
            option http-server-close
            option forwardfor
            timeout connect 5s
            timeout client 50s
            timeout server 50s

          frontend http_front
            bind *:80
            acl url_static path_beg -i /static /images /javascript /stylesheets
            acl url_static path_end -i .jpg .gif .png .css .js
            use_backend static_backend if url_static
            default_backend app_backend

          backend static_backend
            balance roundrobin
            server static1 10.1.1.1:80 check

          backend app_backend
            balance roundrobin
            server app1 10.1.1.2:80 check
            {% for host in groups['all'] %}
            {% if host != inventory_hostname %}
            server {{ host }} {{ hostvars[host]['ansible_default_ipv4']['address'] }}:80 check
            {% endif %}
            {% endfor %}

    - name: Restart haproxy with new config
      systemd:
        name: haproxy
        state: restarted
        enabled: true
      delegate_to: "{{ groups['all'][0] }}"

    - name: Verify haproxy status
      uri:
        url: "http://{{ groups['all'][0] }}/haproxy?stats"
        status_code: 200
      register: haproxy_output
      delegate_to: "{{ groups['all'][0] }}"

    - name: Print haproxy output
      debug:
        var: haproxy_output

    - name: Check haproxy stats
      haproxy_stats:
        url: "http://{{ groups['all'][0] }}/haproxy?stats"
        user: admin
        password: Password01
      register: haproxy_stats_output

    - name: Print haproxy stats output
      debug:
        var: haproxy_stats_output
