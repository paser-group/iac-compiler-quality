
---
- name: Create VPC with subnets
  hosts: localhost
  gather_facts: no
  vars:
    subnet_names:
      - "{{ subnet_prefix }}_subnet_1"
      - "{{ subnet_prefix }}_subnet_2"
      - "{{ subnet_prefix }}_subnet_3"
      - "{{ subnet_prefix }}_subnet_4"
    subnet_cidrs:
      - "10.1.1.0/24"
      - "10.1.2.0/24"
      - "10.1.3.0/24"
      - "10.1.4.0/24"
  tasks:
    - name: Create VPC
      ec2_vpc:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        region: "{{ region }}"
        state: present
        cidr_block: "{{ vpc_cidr_block }}"
        resource_tags: "{{ resource_tags }}"
      register: vpc

    - name: Wait for VPC to stabilize
      wait_for:
        host: "{{ vpc.vpc_id }}"
        port: 22
        timeout: 600
        delay: 10

    - name: Create subnets
      ec2_vpc_subnet:
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        state: "{{ item.state }}"
        vpc_id: "{{ vpc.vpc_id }}"
        cidr: "{{ item.cidr }}"
        resource_tags: "{{ resource_tags }}"
        subnet_name: "{{ item.name }}"
      loop:
        - { state: present, name: "{{ subnet_names[0] }}", cidr: "{{ subnet_cidrs[0] }}" }
        - { state: present, name: "{{ subnet_names[1] }}", cidr: "{{ subnet_cidrs[1] }}" }
        - { state: present, name: "{{ subnet_names[2] }}", cidr: "{{ subnet_cidrs[2] }}" }
        - { state: present, name: "{{ subnet_names[3] }}", cidr: "{{ subnet_cidrs[3] }}" }

    - name: Print outputs
      debug:
        var: item.stdout
      loop:
        - "{{ vpc }}"
        - "{{ item.stdout }}"
      when: "'stdout' in item"
